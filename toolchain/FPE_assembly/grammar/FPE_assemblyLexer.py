# Generated from FPE_assembly.g4 by ANTLR 4.7.2
from antlr4 import *
from io import StringIO
from typing.io import TextIO
import sys



def serializedATN():
    with StringIO() as buf:
        buf.write("\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2O")
        buf.write("\u01f4\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7")
        buf.write("\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r")
        buf.write("\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22\4\23")
        buf.write("\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30")
        buf.write("\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36")
        buf.write("\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%")
        buf.write("\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4,\t,\4-\t-\4.")
        buf.write("\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64")
        buf.write("\t\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:")
        buf.write("\4;\t;\4<\t<\4=\t=\4>\t>\4?\t?\4@\t@\4A\tA\4B\tB\4C\t")
        buf.write("C\4D\tD\4E\tE\4F\tF\4G\tG\4H\tH\4I\tI\4J\tJ\4K\tK\4L\t")
        buf.write("L\4M\tM\4N\tN\3\2\3\2\3\3\3\3\3\4\3\4\3\5\3\5\3\6\3\6")
        buf.write("\3\7\3\7\3\b\3\b\3\t\3\t\3\n\3\n\3\13\3\13\3\13\3\13\3")
        buf.write("\f\3\f\3\r\3\r\3\16\3\16\3\17\3\17\3\17\3\17\3\20\3\20")
        buf.write("\3\20\3\20\3\20\3\20\3\20\3\21\3\21\3\22\3\22\3\22\3\22")
        buf.write("\3\23\3\23\3\23\3\23\3\24\3\24\3\24\3\24\3\25\3\25\3\25")
        buf.write("\3\25\3\25\3\26\3\26\3\26\3\26\3\26\3\27\3\27\3\27\3\27")
        buf.write("\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\31\3\31\3\31")
        buf.write("\3\31\3\31\3\31\3\31\3\31\3\31\3\32\3\32\3\32\3\32\3\33")
        buf.write("\3\33\3\34\3\34\3\34\3\34\3\34\3\35\3\35\3\35\3\35\3\36")
        buf.write("\3\36\3\37\3\37\3\37\3\37\3 \3 \3!\3!\3!\3!\3\"\3\"\3")
        buf.write("\"\3\"\3#\3#\3#\3#\3$\3$\3$\3$\3%\3%\3%\3%\3&\3&\3&\3")
        buf.write("&\3\'\3\'\3\'\3\'\3(\3(\3(\3(\3)\3)\3)\3)\3)\3)\3*\3*")
        buf.write("\3*\3*\3*\3+\3+\3,\3,\3,\3,\3-\3-\3-\3-\3.\3.\3.\3.\3")
        buf.write("/\3/\3/\3/\3\60\3\60\3\60\3\60\3\61\3\61\3\61\3\61\3\62")
        buf.write("\3\62\3\62\3\62\3\63\3\63\3\63\3\63\3\63\3\64\3\64\3\64")
        buf.write("\3\64\3\64\3\65\3\65\3\65\3\65\3\66\3\66\3\66\3\66\3\67")
        buf.write("\3\67\3\67\3\67\38\38\38\39\39\39\39\3:\3:\3:\3:\3;\3")
        buf.write(";\3;\3;\3<\3<\3<\3<\3<\3=\3=\3=\3=\3=\3>\3>\3>\3>\3>\3")
        buf.write("?\3?\3?\3?\3?\3@\3@\3@\3@\3@\3A\3A\3A\3A\3A\3B\3B\3B\3")
        buf.write("B\3B\3C\3C\3C\3C\3D\3D\3D\3D\3D\3E\3E\3E\3E\3E\3F\3F\3")
        buf.write("F\3F\3F\3G\6G\u01ae\nG\rG\16G\u01af\3H\3H\3H\6H\u01b5")
        buf.write("\nH\rH\16H\u01b6\3I\3I\3I\6I\u01bc\nI\rI\16I\u01bd\3J")
        buf.write("\3J\3J\6J\u01c3\nJ\rJ\16J\u01c4\3K\3K\7K\u01c9\nK\fK\16")
        buf.write("K\u01cc\13K\3L\3L\3L\3L\3L\7L\u01d3\nL\fL\16L\u01d6\13")
        buf.write("L\3L\3L\3L\3L\3L\3L\3M\3M\3M\3M\7M\u01e2\nM\fM\16M\u01e5")
        buf.write("\13M\3M\6M\u01e8\nM\rM\16M\u01e9\3M\3M\3N\6N\u01ef\nN")
        buf.write("\rN\16N\u01f0\3N\3N\4\u01d4\u01e3\2O\3\3\5\4\7\5\t\6\13")
        buf.write("\7\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17\35\20\37")
        buf.write("\21!\22#\23%\24\'\25)\26+\27-\30/\31\61\32\63\33\65\34")
        buf.write("\67\359\36;\37= ?!A\"C#E$G%I&K\'M(O)Q*S+U,W-Y.[/]\60_")
        buf.write("\61a\62c\63e\64g\65i\66k\67m8o9q:s;u<w=y>{?}@\177A\u0081")
        buf.write("B\u0083C\u0085D\u0087E\u0089F\u008bG\u008dH\u008fI\u0091")
        buf.write("J\u0093K\u0095L\u0097M\u0099N\u009bO\3\2\r\3\2\62;\4\2")
        buf.write("DDdd\3\2\62\63\4\2QQqq\3\2\629\4\2ZZzz\5\2\62;CHch\5\2")
        buf.write("C\\aac|\6\2\62;C\\aac|\4\2\f\f\17\17\5\2\13\f\17\17\"")
        buf.write("\"\2\u01fc\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2")
        buf.write("\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2")
        buf.write("\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2")
        buf.write("\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#")
        buf.write("\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2")
        buf.write("\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65")
        buf.write("\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2")
        buf.write("\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2")
        buf.write("\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2")
        buf.write("\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3")
        buf.write("\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3\2\2\2\2c\3\2\2\2\2e")
        buf.write("\3\2\2\2\2g\3\2\2\2\2i\3\2\2\2\2k\3\2\2\2\2m\3\2\2\2\2")
        buf.write("o\3\2\2\2\2q\3\2\2\2\2s\3\2\2\2\2u\3\2\2\2\2w\3\2\2\2")
        buf.write("\2y\3\2\2\2\2{\3\2\2\2\2}\3\2\2\2\2\177\3\2\2\2\2\u0081")
        buf.write("\3\2\2\2\2\u0083\3\2\2\2\2\u0085\3\2\2\2\2\u0087\3\2\2")
        buf.write("\2\2\u0089\3\2\2\2\2\u008b\3\2\2\2\2\u008d\3\2\2\2\2\u008f")
        buf.write("\3\2\2\2\2\u0091\3\2\2\2\2\u0093\3\2\2\2\2\u0095\3\2\2")
        buf.write("\2\2\u0097\3\2\2\2\2\u0099\3\2\2\2\2\u009b\3\2\2\2\3\u009d")
        buf.write("\3\2\2\2\5\u009f\3\2\2\2\7\u00a1\3\2\2\2\t\u00a3\3\2\2")
        buf.write("\2\13\u00a5\3\2\2\2\r\u00a7\3\2\2\2\17\u00a9\3\2\2\2\21")
        buf.write("\u00ab\3\2\2\2\23\u00ad\3\2\2\2\25\u00af\3\2\2\2\27\u00b3")
        buf.write("\3\2\2\2\31\u00b5\3\2\2\2\33\u00b7\3\2\2\2\35\u00b9\3")
        buf.write("\2\2\2\37\u00bd\3\2\2\2!\u00c4\3\2\2\2#\u00c6\3\2\2\2")
        buf.write("%\u00ca\3\2\2\2\'\u00ce\3\2\2\2)\u00d2\3\2\2\2+\u00d7")
        buf.write("\3\2\2\2-\u00dc\3\2\2\2/\u00e0\3\2\2\2\61\u00e8\3\2\2")
        buf.write("\2\63\u00f1\3\2\2\2\65\u00f5\3\2\2\2\67\u00f7\3\2\2\2")
        buf.write("9\u00fc\3\2\2\2;\u0100\3\2\2\2=\u0102\3\2\2\2?\u0106\3")
        buf.write("\2\2\2A\u0108\3\2\2\2C\u010c\3\2\2\2E\u0110\3\2\2\2G\u0114")
        buf.write("\3\2\2\2I\u0118\3\2\2\2K\u011c\3\2\2\2M\u0120\3\2\2\2")
        buf.write("O\u0124\3\2\2\2Q\u0128\3\2\2\2S\u012e\3\2\2\2U\u0133\3")
        buf.write("\2\2\2W\u0135\3\2\2\2Y\u0139\3\2\2\2[\u013d\3\2\2\2]\u0141")
        buf.write("\3\2\2\2_\u0145\3\2\2\2a\u0149\3\2\2\2c\u014d\3\2\2\2")
        buf.write("e\u0151\3\2\2\2g\u0156\3\2\2\2i\u015b\3\2\2\2k\u015f\3")
        buf.write("\2\2\2m\u0163\3\2\2\2o\u0167\3\2\2\2q\u016a\3\2\2\2s\u016e")
        buf.write("\3\2\2\2u\u0172\3\2\2\2w\u0176\3\2\2\2y\u017b\3\2\2\2")
        buf.write("{\u0180\3\2\2\2}\u0185\3\2\2\2\177\u018a\3\2\2\2\u0081")
        buf.write("\u018f\3\2\2\2\u0083\u0194\3\2\2\2\u0085\u0199\3\2\2\2")
        buf.write("\u0087\u019d\3\2\2\2\u0089\u01a2\3\2\2\2\u008b\u01a7\3")
        buf.write("\2\2\2\u008d\u01ad\3\2\2\2\u008f\u01b1\3\2\2\2\u0091\u01b8")
        buf.write("\3\2\2\2\u0093\u01bf\3\2\2\2\u0095\u01c6\3\2\2\2\u0097")
        buf.write("\u01cd\3\2\2\2\u0099\u01dd\3\2\2\2\u009b\u01ee\3\2\2\2")
        buf.write("\u009d\u009e\7*\2\2\u009e\4\3\2\2\2\u009f\u00a0\7+\2\2")
        buf.write("\u00a0\6\3\2\2\2\u00a1\u00a2\7,\2\2\u00a2\b\3\2\2\2\u00a3")
        buf.write("\u00a4\7\61\2\2\u00a4\n\3\2\2\2\u00a5\u00a6\7\'\2\2\u00a6")
        buf.write("\f\3\2\2\2\u00a7\u00a8\7-\2\2\u00a8\16\3\2\2\2\u00a9\u00aa")
        buf.write("\7/\2\2\u00aa\20\3\2\2\2\u00ab\u00ac\7}\2\2\u00ac\22\3")
        buf.write("\2\2\2\u00ad\u00ae\7\177\2\2\u00ae\24\3\2\2\2\u00af\u00b0")
        buf.write("\7I\2\2\u00b0\u00b1\7G\2\2\u00b1\u00b2\7V\2\2\u00b2\26")
        buf.write("\3\2\2\2\u00b3\u00b4\7]\2\2\u00b4\30\3\2\2\2\u00b5\u00b6")
        buf.write("\7_\2\2\u00b6\32\3\2\2\2\u00b7\u00b8\7>\2\2\u00b8\34\3")
        buf.write("\2\2\2\u00b9\u00ba\7C\2\2\u00ba\u00bb\7F\2\2\u00bb\u00bc")
        buf.write("\7X\2\2\u00bc\36\3\2\2\2\u00bd\u00be\7P\2\2\u00be\u00bf")
        buf.write("\7Q\2\2\u00bf\u00c0\7a\2\2\u00c0\u00c1\7C\2\2\u00c1\u00c2")
        buf.write("\7F\2\2\u00c2\u00c3\7X\2\2\u00c3 \3\2\2\2\u00c4\u00c5")
        buf.write("\7@\2\2\u00c5\"\3\2\2\2\u00c6\u00c7\7R\2\2\u00c7\u00c8")
        buf.write("\7W\2\2\u00c8\u00c9\7V\2\2\u00c9$\3\2\2\2\u00ca\u00cb")
        buf.write("\7T\2\2\u00cb\u00cc\7G\2\2\u00cc\u00cd\7I\2\2\u00cd&\3")
        buf.write("\2\2\2\u00ce\u00cf\7T\2\2\u00cf\u00d0\7C\2\2\u00d0\u00d1")
        buf.write("\7O\2\2\u00d1(\3\2\2\2\u00d2\u00d3\7T\2\2\u00d3\u00d4")
        buf.write("\7Q\2\2\u00d4\u00d5\7O\2\2\u00d5\u00d6\7C\2\2\u00d6*\3")
        buf.write("\2\2\2\u00d7\u00d8\7T\2\2\u00d8\u00d9\7Q\2\2\u00d9\u00da")
        buf.write("\7O\2\2\u00da\u00db\7D\2\2\u00db,\3\2\2\2\u00dc\u00dd")
        buf.write("\7D\2\2\u00dd\u00de\7C\2\2\u00de\u00df\7O\2\2\u00df.\3")
        buf.write("\2\2\2\u00e0\u00e1\7H\2\2\u00e1\u00e2\7Q\2\2\u00e2\u00e3")
        buf.write("\7T\2\2\u00e3\u00e4\7Y\2\2\u00e4\u00e5\7C\2\2\u00e5\u00e6")
        buf.write("\7T\2\2\u00e6\u00e7\7F\2\2\u00e7\60\3\2\2\2\u00e8\u00e9")
        buf.write("\7D\2\2\u00e9\u00ea\7C\2\2\u00ea\u00eb\7E\2\2\u00eb\u00ec")
        buf.write("\7M\2\2\u00ec\u00ed\7Y\2\2\u00ed\u00ee\7C\2\2\u00ee\u00ef")
        buf.write("\7T\2\2\u00ef\u00f0\7F\2\2\u00f0\62\3\2\2\2\u00f1\u00f2")
        buf.write("\7\\\2\2\u00f2\u00f3\7Q\2\2\u00f3\u00f4\7N\2\2\u00f4\64")
        buf.write("\3\2\2\2\u00f5\u00f6\7<\2\2\u00f6\66\3\2\2\2\u00f7\u00f8")
        buf.write("\7N\2\2\u00f8\u00f9\7Q\2\2\u00f9\u00fa\7Q\2\2\u00fa\u00fb")
        buf.write("\7R\2\2\u00fb8\3\2\2\2\u00fc\u00fd\7F\2\2\u00fd\u00fe")
        buf.write("\7G\2\2\u00fe\u00ff\7H\2\2\u00ff:\3\2\2\2\u0100\u0101")
        buf.write("\7=\2\2\u0101<\3\2\2\2\u0102\u0103\7E\2\2\u0103\u0104")
        buf.write("\7Q\2\2\u0104\u0105\7O\2\2\u0105>\3\2\2\2\u0106\u0107")
        buf.write("\7.\2\2\u0107@\3\2\2\2\u0108\u0109\7P\2\2\u0109\u010a")
        buf.write("\7Q\2\2\u010a\u010b\7R\2\2\u010bB\3\2\2\2\u010c\u010d")
        buf.write("\7L\2\2\u010d\u010e\7O\2\2\u010e\u010f\7R\2\2\u010fD\3")
        buf.write("\2\2\2\u0110\u0111\7L\2\2\u0111\u0112\7G\2\2\u0112\u0113")
        buf.write("\7S\2\2\u0113F\3\2\2\2\u0114\u0115\7L\2\2\u0115\u0116")
        buf.write("\7P\2\2\u0116\u0117\7G\2\2\u0117H\3\2\2\2\u0118\u0119")
        buf.write("\7L\2\2\u0119\u011a\7N\2\2\u011a\u011b\7V\2\2\u011bJ\3")
        buf.write("\2\2\2\u011c\u011d\7L\2\2\u011d\u011e\7N\2\2\u011e\u011f")
        buf.write("\7G\2\2\u011fL\3\2\2\2\u0120\u0121\7L\2\2\u0121\u0122")
        buf.write("\7I\2\2\u0122\u0123\7V\2\2\u0123N\3\2\2\2\u0124\u0125")
        buf.write("\7L\2\2\u0125\u0126\7I\2\2\u0126\u0127\7G\2\2\u0127P\3")
        buf.write("\2\2\2\u0128\u0129\7T\2\2\u0129\u012a\7G\2\2\u012a\u012b")
        buf.write("\7U\2\2\u012b\u012c\7G\2\2\u012c\u012d\7V\2\2\u012dR\3")
        buf.write("\2\2\2\u012e\u012f\7U\2\2\u012f\u0130\7G\2\2\u0130\u0131")
        buf.write("\7G\2\2\u0131\u0132\7M\2\2\u0132T\3\2\2\2\u0133\u0134")
        buf.write("\7\60\2\2\u0134V\3\2\2\2\u0135\u0136\7U\2\2\u0136\u0137")
        buf.write("\7G\2\2\u0137\u0138\7V\2\2\u0138X\3\2\2\2\u0139\u013a")
        buf.write("\7O\2\2\u013a\u013b\7Q\2\2\u013b\u013c\7X\2\2\u013cZ\3")
        buf.write("\2\2\2\u013d\u013e\7P\2\2\u013e\u013f\7Q\2\2\u013f\u0140")
        buf.write("\7V\2\2\u0140\\\3\2\2\2\u0141\u0142\7N\2\2\u0142\u0143")
        buf.write("\7U\2\2\u0143\u0144\7J\2\2\u0144^\3\2\2\2\u0145\u0146")
        buf.write("\7T\2\2\u0146\u0147\7U\2\2\u0147\u0148\7J\2\2\u0148`\3")
        buf.write("\2\2\2\u0149\u014a\7N\2\2\u014a\u014b\7T\2\2\u014b\u014c")
        buf.write("\7N\2\2\u014cb\3\2\2\2\u014d\u014e\7T\2\2\u014e\u014f")
        buf.write("\7T\2\2\u014f\u0150\7N\2\2\u0150d\3\2\2\2\u0151\u0152")
        buf.write("\7W\2\2\u0152\u0153\7E\2\2\u0153\u0154\7O\2\2\u0154\u0155")
        buf.write("\7R\2\2\u0155f\3\2\2\2\u0156\u0157\7U\2\2\u0157\u0158")
        buf.write("\7E\2\2\u0158\u0159\7O\2\2\u0159\u015a\7R\2\2\u015ah\3")
        buf.write("\2\2\2\u015b\u015c\7C\2\2\u015c\u015d\7F\2\2\u015d\u015e")
        buf.write("\7F\2\2\u015ej\3\2\2\2\u015f\u0160\7U\2\2\u0160\u0161")
        buf.write("\7W\2\2\u0161\u0162\7D\2\2\u0162l\3\2\2\2\u0163\u0164")
        buf.write("\7C\2\2\u0164\u0165\7P\2\2\u0165\u0166\7F\2\2\u0166n\3")
        buf.write("\2\2\2\u0167\u0168\7Q\2\2\u0168\u0169\7T\2\2\u0169p\3")
        buf.write("\2\2\2\u016a\u016b\7Z\2\2\u016b\u016c\7Q\2\2\u016c\u016d")
        buf.write("\7T\2\2\u016dr\3\2\2\2\u016e\u016f\7O\2\2\u016f\u0170")
        buf.write("\7W\2\2\u0170\u0171\7N\2\2\u0171t\3\2\2\2\u0172\u0173")
        buf.write("\7C\2\2\u0173\u0174\7E\2\2\u0174\u0175\7E\2\2\u0175v\3")
        buf.write("\2\2\2\u0176\u0177\7R\2\2\u0177\u0178\7O\2\2\u0178\u0179")
        buf.write("\7Q\2\2\u0179\u017a\7X\2\2\u017ax\3\2\2\2\u017b\u017c")
        buf.write("\7R\2\2\u017c\u017d\7P\2\2\u017d\u017e\7Q\2\2\u017e\u017f")
        buf.write("\7V\2\2\u017fz\3\2\2\2\u0180\u0181\7R\2\2\u0181\u0182")
        buf.write("\7N\2\2\u0182\u0183\7U\2\2\u0183\u0184\7J\2\2\u0184|\3")
        buf.write("\2\2\2\u0185\u0186\7R\2\2\u0186\u0187\7T\2\2\u0187\u0188")
        buf.write("\7U\2\2\u0188\u0189\7J\2\2\u0189~\3\2\2\2\u018a\u018b")
        buf.write("\7R\2\2\u018b\u018c\7N\2\2\u018c\u018d\7T\2\2\u018d\u018e")
        buf.write("\7N\2\2\u018e\u0080\3\2\2\2\u018f\u0190\7R\2\2\u0190\u0191")
        buf.write("\7T\2\2\u0191\u0192\7T\2\2\u0192\u0193\7N\2\2\u0193\u0082")
        buf.write("\3\2\2\2\u0194\u0195\7R\2\2\u0195\u0196\7C\2\2\u0196\u0197")
        buf.write("\7P\2\2\u0197\u0198\7F\2\2\u0198\u0084\3\2\2\2\u0199\u019a")
        buf.write("\7R\2\2\u019a\u019b\7Q\2\2\u019b\u019c\7T\2\2\u019c\u0086")
        buf.write("\3\2\2\2\u019d\u019e\7R\2\2\u019e\u019f\7Z\2\2\u019f\u01a0")
        buf.write("\7Q\2\2\u01a0\u01a1\7T\2\2\u01a1\u0088\3\2\2\2\u01a2\u01a3")
        buf.write("\7R\2\2\u01a3\u01a4\7C\2\2\u01a4\u01a5\7F\2\2\u01a5\u01a6")
        buf.write("\7F\2\2\u01a6\u008a\3\2\2\2\u01a7\u01a8\7R\2\2\u01a8\u01a9")
        buf.write("\7U\2\2\u01a9\u01aa\7W\2\2\u01aa\u01ab\7D\2\2\u01ab\u008c")
        buf.write("\3\2\2\2\u01ac\u01ae\t\2\2\2\u01ad\u01ac\3\2\2\2\u01ae")
        buf.write("\u01af\3\2\2\2\u01af\u01ad\3\2\2\2\u01af\u01b0\3\2\2\2")
        buf.write("\u01b0\u008e\3\2\2\2\u01b1\u01b2\7\62\2\2\u01b2\u01b4")
        buf.write("\t\3\2\2\u01b3\u01b5\t\4\2\2\u01b4\u01b3\3\2\2\2\u01b5")
        buf.write("\u01b6\3\2\2\2\u01b6\u01b4\3\2\2\2\u01b6\u01b7\3\2\2\2")
        buf.write("\u01b7\u0090\3\2\2\2\u01b8\u01b9\7\62\2\2\u01b9\u01bb")
        buf.write("\t\5\2\2\u01ba\u01bc\t\6\2\2\u01bb\u01ba\3\2\2\2\u01bc")
        buf.write("\u01bd\3\2\2\2\u01bd\u01bb\3\2\2\2\u01bd\u01be\3\2\2\2")
        buf.write("\u01be\u0092\3\2\2\2\u01bf\u01c0\7\62\2\2\u01c0\u01c2")
        buf.write("\t\7\2\2\u01c1\u01c3\t\b\2\2\u01c2\u01c1\3\2\2\2\u01c3")
        buf.write("\u01c4\3\2\2\2\u01c4\u01c2\3\2\2\2\u01c4\u01c5\3\2\2\2")
        buf.write("\u01c5\u0094\3\2\2\2\u01c6\u01ca\t\t\2\2\u01c7\u01c9\t")
        buf.write("\n\2\2\u01c8\u01c7\3\2\2\2\u01c9\u01cc\3\2\2\2\u01ca\u01c8")
        buf.write("\3\2\2\2\u01ca\u01cb\3\2\2\2\u01cb\u0096\3\2\2\2\u01cc")
        buf.write("\u01ca\3\2\2\2\u01cd\u01ce\7\61\2\2\u01ce\u01cf\7\61\2")
        buf.write("\2\u01cf\u01d0\7,\2\2\u01d0\u01d4\3\2\2\2\u01d1\u01d3")
        buf.write("\13\2\2\2\u01d2\u01d1\3\2\2\2\u01d3\u01d6\3\2\2\2\u01d4")
        buf.write("\u01d5\3\2\2\2\u01d4\u01d2\3\2\2\2\u01d5\u01d7\3\2\2\2")
        buf.write("\u01d6\u01d4\3\2\2\2\u01d7\u01d8\7,\2\2\u01d8\u01d9\7")
        buf.write("\61\2\2\u01d9\u01da\7\61\2\2\u01da\u01db\3\2\2\2\u01db")
        buf.write("\u01dc\bL\2\2\u01dc\u0098\3\2\2\2\u01dd\u01de\7\61\2\2")
        buf.write("\u01de\u01df\7\61\2\2\u01df\u01e3\3\2\2\2\u01e0\u01e2")
        buf.write("\13\2\2\2\u01e1\u01e0\3\2\2\2\u01e2\u01e5\3\2\2\2\u01e3")
        buf.write("\u01e4\3\2\2\2\u01e3\u01e1\3\2\2\2\u01e4\u01e7\3\2\2\2")
        buf.write("\u01e5\u01e3\3\2\2\2\u01e6\u01e8\t\13\2\2\u01e7\u01e6")
        buf.write("\3\2\2\2\u01e8\u01e9\3\2\2\2\u01e9\u01e7\3\2\2\2\u01e9")
        buf.write("\u01ea\3\2\2\2\u01ea\u01eb\3\2\2\2\u01eb\u01ec\bM\2\2")
        buf.write("\u01ec\u009a\3\2\2\2\u01ed\u01ef\t\f\2\2\u01ee\u01ed\3")
        buf.write("\2\2\2\u01ef\u01f0\3\2\2\2\u01f0\u01ee\3\2\2\2\u01f0\u01f1")
        buf.write("\3\2\2\2\u01f1\u01f2\3\2\2\2\u01f2\u01f3\bN\2\2\u01f3")
        buf.write("\u009c\3\2\2\2\f\2\u01af\u01b6\u01bd\u01c4\u01ca\u01d4")
        buf.write("\u01e3\u01e9\u01f0\3\b\2\2")
        return buf.getvalue()


class FPE_assemblyLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    T__26 = 27
    T__27 = 28
    T__28 = 29
    T__29 = 30
    T__30 = 31
    T__31 = 32
    T__32 = 33
    T__33 = 34
    T__34 = 35
    T__35 = 36
    T__36 = 37
    T__37 = 38
    T__38 = 39
    T__39 = 40
    T__40 = 41
    T__41 = 42
    T__42 = 43
    T__43 = 44
    T__44 = 45
    T__45 = 46
    T__46 = 47
    T__47 = 48
    T__48 = 49
    T__49 = 50
    T__50 = 51
    T__51 = 52
    T__52 = 53
    T__53 = 54
    T__54 = 55
    T__55 = 56
    T__56 = 57
    T__57 = 58
    T__58 = 59
    T__59 = 60
    T__60 = 61
    T__61 = 62
    T__62 = 63
    T__63 = 64
    T__64 = 65
    T__65 = 66
    T__66 = 67
    T__67 = 68
    T__68 = 69
    DEC_NUM = 70
    BIN_NUM = 71
    OCT_NUM = 72
    HEX_NUM = 73
    IDENTIFER = 74
    MUTL_LINE_COMMENT = 75
    SING_LINE_COMMENT = 76
    WHITESPACE = 77

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'('", "')'", "'*'", "'/'", "'%'", "'+'", "'-'", "'{'", "'}'", 
            "'GET'", "'['", "']'", "'<'", "'ADV'", "'NO_ADV'", "'>'", "'PUT'", 
            "'REG'", "'RAM'", "'ROMA'", "'ROMB'", "'BAM'", "'FORWARD'", 
            "'BACKWARD'", "'ZOL'", "':'", "'LOOP'", "'DEF'", "';'", "'COM'", 
            "','", "'NOP'", "'JMP'", "'JEQ'", "'JNE'", "'JLT'", "'JLE'", 
            "'JGT'", "'JGE'", "'RESET'", "'SEEK'", "'.'", "'SET'", "'MOV'", 
            "'NOT'", "'LSH'", "'RSH'", "'LRL'", "'RRL'", "'UCMP'", "'SCMP'", 
            "'ADD'", "'SUB'", "'AND'", "'OR'", "'XOR'", "'MUL'", "'ACC'", 
            "'PMOV'", "'PNOT'", "'PLSH'", "'PRSH'", "'PLRL'", "'PRRL'", 
            "'PAND'", "'POR'", "'PXOR'", "'PADD'", "'PSUB'" ]

    symbolicNames = [ "<INVALID>",
            "DEC_NUM", "BIN_NUM", "OCT_NUM", "HEX_NUM", "IDENTIFER", "MUTL_LINE_COMMENT", 
            "SING_LINE_COMMENT", "WHITESPACE" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", 
                  "T__32", "T__33", "T__34", "T__35", "T__36", "T__37", 
                  "T__38", "T__39", "T__40", "T__41", "T__42", "T__43", 
                  "T__44", "T__45", "T__46", "T__47", "T__48", "T__49", 
                  "T__50", "T__51", "T__52", "T__53", "T__54", "T__55", 
                  "T__56", "T__57", "T__58", "T__59", "T__60", "T__61", 
                  "T__62", "T__63", "T__64", "T__65", "T__66", "T__67", 
                  "T__68", "DEC_NUM", "BIN_NUM", "OCT_NUM", "HEX_NUM", "IDENTIFER", 
                  "MUTL_LINE_COMMENT", "SING_LINE_COMMENT", "WHITESPACE" ]

    grammarFileName = "FPE_assembly.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.7.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


