# Generated from FPE_assembly.g4 by ANTLR 4.7.2
from antlr4 import *
from io import StringIO
from typing.io import TextIO
import sys



def serializedATN():
    with StringIO() as buf:
        buf.write("\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2@")
        buf.write("\u0191\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7")
        buf.write("\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r")
        buf.write("\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22\4\23")
        buf.write("\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30")
        buf.write("\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36")
        buf.write("\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%")
        buf.write("\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4,\t,\4-\t-\4.")
        buf.write("\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64")
        buf.write("\t\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:")
        buf.write("\4;\t;\4<\t<\4=\t=\4>\t>\4?\t?\3\2\3\2\3\3\3\3\3\4\3\4")
        buf.write("\3\5\3\5\3\6\3\6\3\7\3\7\3\b\3\b\3\t\3\t\3\t\3\t\3\n\3")
        buf.write("\n\3\13\3\13\3\f\3\f\3\r\3\r\3\16\3\16\3\17\3\17\3\17")
        buf.write("\3\17\3\20\3\20\3\20\3\20\3\20\3\20\3\20\3\21\3\21\3\21")
        buf.write("\3\21\3\22\3\22\3\22\3\22\3\23\3\23\3\23\3\23\3\24\3\24")
        buf.write("\3\24\3\24\3\24\3\25\3\25\3\25\3\25\3\25\3\26\3\26\3\26")
        buf.write("\3\26\3\27\3\27\3\27\3\27\3\27\3\27\3\27\3\27\3\30\3\30")
        buf.write("\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\31\3\31\3\31\3\31")
        buf.write("\3\32\3\32\3\33\3\33\3\33\3\33\3\34\3\34\3\35\3\35\3\35")
        buf.write("\3\35\3\36\3\36\3\36\3\36\3\37\3\37\3\37\3\37\3 \3 \3")
        buf.write(" \3 \3!\3!\3!\3!\3\"\3\"\3\"\3\"\3#\3#\3#\3#\3$\3$\3$")
        buf.write("\3$\3%\3%\3%\3%\3%\3%\3&\3&\3&\3&\3&\3\'\3\'\3\'\3\'\3")
        buf.write("(\3(\3(\3(\3)\3)\3)\3)\3*\3*\3*\3*\3+\3+\3+\3+\3,\3,\3")
        buf.write(",\3,\3-\3-\3-\3-\3-\3.\3.\3.\3.\3.\3/\3/\3/\3/\3\60\3")
        buf.write("\60\3\60\3\60\3\61\3\61\3\61\3\61\3\62\3\62\3\62\3\63")
        buf.write("\3\63\3\63\3\63\3\64\3\64\3\64\3\64\3\65\3\65\3\65\3\65")
        buf.write("\3\66\3\66\3\67\3\67\38\68\u014b\n8\r8\168\u014c\39\3")
        buf.write("9\39\69\u0152\n9\r9\169\u0153\3:\3:\3:\6:\u0159\n:\r:")
        buf.write("\16:\u015a\3;\3;\3;\6;\u0160\n;\r;\16;\u0161\3<\3<\7<")
        buf.write("\u0166\n<\f<\16<\u0169\13<\3=\3=\3=\3=\3=\7=\u0170\n=")
        buf.write("\f=\16=\u0173\13=\3=\3=\3=\3=\3=\3=\3>\3>\3>\3>\7>\u017f")
        buf.write("\n>\f>\16>\u0182\13>\3>\6>\u0185\n>\r>\16>\u0186\3>\3")
        buf.write(">\3?\6?\u018c\n?\r?\16?\u018d\3?\3?\4\u0171\u0180\2@\3")
        buf.write("\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31\16")
        buf.write("\33\17\35\20\37\21!\22#\23%\24\'\25)\26+\27-\30/\31\61")
        buf.write("\32\63\33\65\34\67\359\36;\37= ?!A\"C#E$G%I&K\'M(O)Q*")
        buf.write("S+U,W-Y.[/]\60_\61a\62c\63e\64g\65i\66k\67m8o9q:s;u<w")
        buf.write("=y>{?}@\3\2\r\3\2\62;\4\2DDdd\3\2\62\63\4\2QQqq\3\2\62")
        buf.write("9\4\2ZZzz\5\2\62;CHch\5\2C\\aac|\6\2\62;C\\aac|\4\2\f")
        buf.write("\f\17\17\5\2\13\f\17\17\"\"\2\u0199\2\3\3\2\2\2\2\5\3")
        buf.write("\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2")
        buf.write("\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2")
        buf.write("\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2")
        buf.write("\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2")
        buf.write("\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3")
        buf.write("\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2")
        buf.write("\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2")
        buf.write("\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3")
        buf.write("\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W")
        buf.write("\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2")
        buf.write("a\3\2\2\2\2c\3\2\2\2\2e\3\2\2\2\2g\3\2\2\2\2i\3\2\2\2")
        buf.write("\2k\3\2\2\2\2m\3\2\2\2\2o\3\2\2\2\2q\3\2\2\2\2s\3\2\2")
        buf.write("\2\2u\3\2\2\2\2w\3\2\2\2\2y\3\2\2\2\2{\3\2\2\2\2}\3\2")
        buf.write("\2\2\3\177\3\2\2\2\5\u0081\3\2\2\2\7\u0083\3\2\2\2\t\u0085")
        buf.write("\3\2\2\2\13\u0087\3\2\2\2\r\u0089\3\2\2\2\17\u008b\3\2")
        buf.write("\2\2\21\u008d\3\2\2\2\23\u0091\3\2\2\2\25\u0093\3\2\2")
        buf.write("\2\27\u0095\3\2\2\2\31\u0097\3\2\2\2\33\u0099\3\2\2\2")
        buf.write("\35\u009b\3\2\2\2\37\u009f\3\2\2\2!\u00a6\3\2\2\2#\u00aa")
        buf.write("\3\2\2\2%\u00ae\3\2\2\2\'\u00b2\3\2\2\2)\u00b7\3\2\2\2")
        buf.write("+\u00bc\3\2\2\2-\u00c0\3\2\2\2/\u00c8\3\2\2\2\61\u00d1")
        buf.write("\3\2\2\2\63\u00d5\3\2\2\2\65\u00d7\3\2\2\2\67\u00db\3")
        buf.write("\2\2\29\u00dd\3\2\2\2;\u00e1\3\2\2\2=\u00e5\3\2\2\2?\u00e9")
        buf.write("\3\2\2\2A\u00ed\3\2\2\2C\u00f1\3\2\2\2E\u00f5\3\2\2\2")
        buf.write("G\u00f9\3\2\2\2I\u00fd\3\2\2\2K\u0103\3\2\2\2M\u0108\3")
        buf.write("\2\2\2O\u010c\3\2\2\2Q\u0110\3\2\2\2S\u0114\3\2\2\2U\u0118")
        buf.write("\3\2\2\2W\u011c\3\2\2\2Y\u0120\3\2\2\2[\u0125\3\2\2\2")
        buf.write("]\u012a\3\2\2\2_\u012e\3\2\2\2a\u0132\3\2\2\2c\u0136\3")
        buf.write("\2\2\2e\u0139\3\2\2\2g\u013d\3\2\2\2i\u0141\3\2\2\2k\u0145")
        buf.write("\3\2\2\2m\u0147\3\2\2\2o\u014a\3\2\2\2q\u014e\3\2\2\2")
        buf.write("s\u0155\3\2\2\2u\u015c\3\2\2\2w\u0163\3\2\2\2y\u016a\3")
        buf.write("\2\2\2{\u017a\3\2\2\2}\u018b\3\2\2\2\177\u0080\7,\2\2")
        buf.write("\u0080\4\3\2\2\2\u0081\u0082\7\61\2\2\u0082\6\3\2\2\2")
        buf.write("\u0083\u0084\7\'\2\2\u0084\b\3\2\2\2\u0085\u0086\7-\2")
        buf.write("\2\u0086\n\3\2\2\2\u0087\u0088\7/\2\2\u0088\f\3\2\2\2")
        buf.write("\u0089\u008a\7}\2\2\u008a\16\3\2\2\2\u008b\u008c\7\177")
        buf.write("\2\2\u008c\20\3\2\2\2\u008d\u008e\7I\2\2\u008e\u008f\7")
        buf.write("G\2\2\u008f\u0090\7V\2\2\u0090\22\3\2\2\2\u0091\u0092")
        buf.write("\7]\2\2\u0092\24\3\2\2\2\u0093\u0094\7_\2\2\u0094\26\3")
        buf.write("\2\2\2\u0095\u0096\7>\2\2\u0096\30\3\2\2\2\u0097\u0098")
        buf.write("\7.\2\2\u0098\32\3\2\2\2\u0099\u009a\7@\2\2\u009a\34\3")
        buf.write("\2\2\2\u009b\u009c\7C\2\2\u009c\u009d\7F\2\2\u009d\u009e")
        buf.write("\7X\2\2\u009e\36\3\2\2\2\u009f\u00a0\7P\2\2\u00a0\u00a1")
        buf.write("\7Q\2\2\u00a1\u00a2\7a\2\2\u00a2\u00a3\7C\2\2\u00a3\u00a4")
        buf.write("\7F\2\2\u00a4\u00a5\7X\2\2\u00a5 \3\2\2\2\u00a6\u00a7")
        buf.write("\7R\2\2\u00a7\u00a8\7W\2\2\u00a8\u00a9\7V\2\2\u00a9\"")
        buf.write("\3\2\2\2\u00aa\u00ab\7T\2\2\u00ab\u00ac\7G\2\2\u00ac\u00ad")
        buf.write("\7I\2\2\u00ad$\3\2\2\2\u00ae\u00af\7T\2\2\u00af\u00b0")
        buf.write("\7C\2\2\u00b0\u00b1\7O\2\2\u00b1&\3\2\2\2\u00b2\u00b3")
        buf.write("\7T\2\2\u00b3\u00b4\7Q\2\2\u00b4\u00b5\7O\2\2\u00b5\u00b6")
        buf.write("\7C\2\2\u00b6(\3\2\2\2\u00b7\u00b8\7T\2\2\u00b8\u00b9")
        buf.write("\7Q\2\2\u00b9\u00ba\7O\2\2\u00ba\u00bb\7D\2\2\u00bb*\3")
        buf.write("\2\2\2\u00bc\u00bd\7D\2\2\u00bd\u00be\7C\2\2\u00be\u00bf")
        buf.write("\7O\2\2\u00bf,\3\2\2\2\u00c0\u00c1\7H\2\2\u00c1\u00c2")
        buf.write("\7Q\2\2\u00c2\u00c3\7T\2\2\u00c3\u00c4\7Y\2\2\u00c4\u00c5")
        buf.write("\7C\2\2\u00c5\u00c6\7T\2\2\u00c6\u00c7\7F\2\2\u00c7.\3")
        buf.write("\2\2\2\u00c8\u00c9\7D\2\2\u00c9\u00ca\7C\2\2\u00ca\u00cb")
        buf.write("\7E\2\2\u00cb\u00cc\7M\2\2\u00cc\u00cd\7Y\2\2\u00cd\u00ce")
        buf.write("\7C\2\2\u00ce\u00cf\7T\2\2\u00cf\u00d0\7F\2\2\u00d0\60")
        buf.write("\3\2\2\2\u00d1\u00d2\7\\\2\2\u00d2\u00d3\7Q\2\2\u00d3")
        buf.write("\u00d4\7N\2\2\u00d4\62\3\2\2\2\u00d5\u00d6\7<\2\2\u00d6")
        buf.write("\64\3\2\2\2\u00d7\u00d8\7F\2\2\u00d8\u00d9\7G\2\2\u00d9")
        buf.write("\u00da\7H\2\2\u00da\66\3\2\2\2\u00db\u00dc\7=\2\2\u00dc")
        buf.write("8\3\2\2\2\u00dd\u00de\7P\2\2\u00de\u00df\7Q\2\2\u00df")
        buf.write("\u00e0\7R\2\2\u00e0:\3\2\2\2\u00e1\u00e2\7L\2\2\u00e2")
        buf.write("\u00e3\7O\2\2\u00e3\u00e4\7R\2\2\u00e4<\3\2\2\2\u00e5")
        buf.write("\u00e6\7L\2\2\u00e6\u00e7\7G\2\2\u00e7\u00e8\7S\2\2\u00e8")
        buf.write(">\3\2\2\2\u00e9\u00ea\7L\2\2\u00ea\u00eb\7P\2\2\u00eb")
        buf.write("\u00ec\7G\2\2\u00ec@\3\2\2\2\u00ed\u00ee\7L\2\2\u00ee")
        buf.write("\u00ef\7N\2\2\u00ef\u00f0\7V\2\2\u00f0B\3\2\2\2\u00f1")
        buf.write("\u00f2\7L\2\2\u00f2\u00f3\7N\2\2\u00f3\u00f4\7G\2\2\u00f4")
        buf.write("D\3\2\2\2\u00f5\u00f6\7L\2\2\u00f6\u00f7\7I\2\2\u00f7")
        buf.write("\u00f8\7V\2\2\u00f8F\3\2\2\2\u00f9\u00fa\7L\2\2\u00fa")
        buf.write("\u00fb\7I\2\2\u00fb\u00fc\7G\2\2\u00fcH\3\2\2\2\u00fd")
        buf.write("\u00fe\7T\2\2\u00fe\u00ff\7G\2\2\u00ff\u0100\7U\2\2\u0100")
        buf.write("\u0101\7G\2\2\u0101\u0102\7V\2\2\u0102J\3\2\2\2\u0103")
        buf.write("\u0104\7U\2\2\u0104\u0105\7G\2\2\u0105\u0106\7G\2\2\u0106")
        buf.write("\u0107\7M\2\2\u0107L\3\2\2\2\u0108\u0109\7O\2\2\u0109")
        buf.write("\u010a\7Q\2\2\u010a\u010b\7X\2\2\u010bN\3\2\2\2\u010c")
        buf.write("\u010d\7P\2\2\u010d\u010e\7Q\2\2\u010e\u010f\7V\2\2\u010f")
        buf.write("P\3\2\2\2\u0110\u0111\7N\2\2\u0111\u0112\7U\2\2\u0112")
        buf.write("\u0113\7J\2\2\u0113R\3\2\2\2\u0114\u0115\7T\2\2\u0115")
        buf.write("\u0116\7U\2\2\u0116\u0117\7J\2\2\u0117T\3\2\2\2\u0118")
        buf.write("\u0119\7N\2\2\u0119\u011a\7T\2\2\u011a\u011b\7N\2\2\u011b")
        buf.write("V\3\2\2\2\u011c\u011d\7T\2\2\u011d\u011e\7T\2\2\u011e")
        buf.write("\u011f\7N\2\2\u011fX\3\2\2\2\u0120\u0121\7W\2\2\u0121")
        buf.write("\u0122\7E\2\2\u0122\u0123\7O\2\2\u0123\u0124\7R\2\2\u0124")
        buf.write("Z\3\2\2\2\u0125\u0126\7U\2\2\u0126\u0127\7E\2\2\u0127")
        buf.write("\u0128\7O\2\2\u0128\u0129\7R\2\2\u0129\\\3\2\2\2\u012a")
        buf.write("\u012b\7C\2\2\u012b\u012c\7F\2\2\u012c\u012d\7F\2\2\u012d")
        buf.write("^\3\2\2\2\u012e\u012f\7U\2\2\u012f\u0130\7W\2\2\u0130")
        buf.write("\u0131\7D\2\2\u0131`\3\2\2\2\u0132\u0133\7C\2\2\u0133")
        buf.write("\u0134\7P\2\2\u0134\u0135\7F\2\2\u0135b\3\2\2\2\u0136")
        buf.write("\u0137\7Q\2\2\u0137\u0138\7T\2\2\u0138d\3\2\2\2\u0139")
        buf.write("\u013a\7Z\2\2\u013a\u013b\7Q\2\2\u013b\u013c\7T\2\2\u013c")
        buf.write("f\3\2\2\2\u013d\u013e\7O\2\2\u013e\u013f\7W\2\2\u013f")
        buf.write("\u0140\7N\2\2\u0140h\3\2\2\2\u0141\u0142\7C\2\2\u0142")
        buf.write("\u0143\7E\2\2\u0143\u0144\7E\2\2\u0144j\3\2\2\2\u0145")
        buf.write("\u0146\7*\2\2\u0146l\3\2\2\2\u0147\u0148\7+\2\2\u0148")
        buf.write("n\3\2\2\2\u0149\u014b\t\2\2\2\u014a\u0149\3\2\2\2\u014b")
        buf.write("\u014c\3\2\2\2\u014c\u014a\3\2\2\2\u014c\u014d\3\2\2\2")
        buf.write("\u014dp\3\2\2\2\u014e\u014f\7\62\2\2\u014f\u0151\t\3\2")
        buf.write("\2\u0150\u0152\t\4\2\2\u0151\u0150\3\2\2\2\u0152\u0153")
        buf.write("\3\2\2\2\u0153\u0151\3\2\2\2\u0153\u0154\3\2\2\2\u0154")
        buf.write("r\3\2\2\2\u0155\u0156\7\62\2\2\u0156\u0158\t\5\2\2\u0157")
        buf.write("\u0159\t\6\2\2\u0158\u0157\3\2\2\2\u0159\u015a\3\2\2\2")
        buf.write("\u015a\u0158\3\2\2\2\u015a\u015b\3\2\2\2\u015bt\3\2\2")
        buf.write("\2\u015c\u015d\7\62\2\2\u015d\u015f\t\7\2\2\u015e\u0160")
        buf.write("\t\b\2\2\u015f\u015e\3\2\2\2\u0160\u0161\3\2\2\2\u0161")
        buf.write("\u015f\3\2\2\2\u0161\u0162\3\2\2\2\u0162v\3\2\2\2\u0163")
        buf.write("\u0167\t\t\2\2\u0164\u0166\t\n\2\2\u0165\u0164\3\2\2\2")
        buf.write("\u0166\u0169\3\2\2\2\u0167\u0165\3\2\2\2\u0167\u0168\3")
        buf.write("\2\2\2\u0168x\3\2\2\2\u0169\u0167\3\2\2\2\u016a\u016b")
        buf.write("\7\61\2\2\u016b\u016c\7\61\2\2\u016c\u016d\7,\2\2\u016d")
        buf.write("\u0171\3\2\2\2\u016e\u0170\13\2\2\2\u016f\u016e\3\2\2")
        buf.write("\2\u0170\u0173\3\2\2\2\u0171\u0172\3\2\2\2\u0171\u016f")
        buf.write("\3\2\2\2\u0172\u0174\3\2\2\2\u0173\u0171\3\2\2\2\u0174")
        buf.write("\u0175\7,\2\2\u0175\u0176\7\61\2\2\u0176\u0177\7\61\2")
        buf.write("\2\u0177\u0178\3\2\2\2\u0178\u0179\b=\2\2\u0179z\3\2\2")
        buf.write("\2\u017a\u017b\7\61\2\2\u017b\u017c\7\61\2\2\u017c\u0180")
        buf.write("\3\2\2\2\u017d\u017f\13\2\2\2\u017e\u017d\3\2\2\2\u017f")
        buf.write("\u0182\3\2\2\2\u0180\u0181\3\2\2\2\u0180\u017e\3\2\2\2")
        buf.write("\u0181\u0184\3\2\2\2\u0182\u0180\3\2\2\2\u0183\u0185\t")
        buf.write("\13\2\2\u0184\u0183\3\2\2\2\u0185\u0186\3\2\2\2\u0186")
        buf.write("\u0184\3\2\2\2\u0186\u0187\3\2\2\2\u0187\u0188\3\2\2\2")
        buf.write("\u0188\u0189\b>\2\2\u0189|\3\2\2\2\u018a\u018c\t\f\2\2")
        buf.write("\u018b\u018a\3\2\2\2\u018c\u018d\3\2\2\2\u018d\u018b\3")
        buf.write("\2\2\2\u018d\u018e\3\2\2\2\u018e\u018f\3\2\2\2\u018f\u0190")
        buf.write("\b?\2\2\u0190~\3\2\2\2\f\2\u014c\u0153\u015a\u0161\u0167")
        buf.write("\u0171\u0180\u0186\u018d\3\b\2\2")
        return buf.getvalue()


class FPE_assemblyLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    T__26 = 27
    T__27 = 28
    T__28 = 29
    T__29 = 30
    T__30 = 31
    T__31 = 32
    T__32 = 33
    T__33 = 34
    T__34 = 35
    T__35 = 36
    T__36 = 37
    T__37 = 38
    T__38 = 39
    T__39 = 40
    T__40 = 41
    T__41 = 42
    T__42 = 43
    T__43 = 44
    T__44 = 45
    T__45 = 46
    T__46 = 47
    T__47 = 48
    T__48 = 49
    T__49 = 50
    T__50 = 51
    T__51 = 52
    ORB = 53
    CRB = 54
    DEC_NUM = 55
    BIN_NUM = 56
    OCT_NUM = 57
    HEX_NUM = 58
    IDENTIFER = 59
    MUTL_LINE_COMMENT = 60
    SING_LINE_COMMENT = 61
    WHITESPACE = 62

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'*'", "'/'", "'%'", "'+'", "'-'", "'{'", "'}'", "'GET'", "'['", 
            "']'", "'<'", "','", "'>'", "'ADV'", "'NO_ADV'", "'PUT'", "'REG'", 
            "'RAM'", "'ROMA'", "'ROMB'", "'BAM'", "'FORWARD'", "'BACKWARD'", 
            "'ZOL'", "':'", "'DEF'", "';'", "'NOP'", "'JMP'", "'JEQ'", "'JNE'", 
            "'JLT'", "'JLE'", "'JGT'", "'JGE'", "'RESET'", "'SEEK'", "'MOV'", 
            "'NOT'", "'LSH'", "'RSH'", "'LRL'", "'RRL'", "'UCMP'", "'SCMP'", 
            "'ADD'", "'SUB'", "'AND'", "'OR'", "'XOR'", "'MUL'", "'ACC'", 
            "'('", "')'" ]

    symbolicNames = [ "<INVALID>",
            "ORB", "CRB", "DEC_NUM", "BIN_NUM", "OCT_NUM", "HEX_NUM", "IDENTIFER", 
            "MUTL_LINE_COMMENT", "SING_LINE_COMMENT", "WHITESPACE" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", 
                  "T__32", "T__33", "T__34", "T__35", "T__36", "T__37", 
                  "T__38", "T__39", "T__40", "T__41", "T__42", "T__43", 
                  "T__44", "T__45", "T__46", "T__47", "T__48", "T__49", 
                  "T__50", "T__51", "ORB", "CRB", "DEC_NUM", "BIN_NUM", 
                  "OCT_NUM", "HEX_NUM", "IDENTIFER", "MUTL_LINE_COMMENT", 
                  "SING_LINE_COMMENT", "WHITESPACE" ]

    grammarFileName = "FPE_assembly.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.7.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


