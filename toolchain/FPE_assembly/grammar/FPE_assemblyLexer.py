# Generated from FPE_assembly.g4 by ANTLR 4.7.2
from antlr4 import *
from io import StringIO
from typing.io import TextIO
import sys



def serializedATN():
    with StringIO() as buf:
        buf.write("\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2D")
        buf.write("\u01a8\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7")
        buf.write("\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r")
        buf.write("\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22\4\23")
        buf.write("\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30")
        buf.write("\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36")
        buf.write("\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%")
        buf.write("\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4,\t,\4-\t-\4.")
        buf.write("\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64")
        buf.write("\t\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:")
        buf.write("\4;\t;\4<\t<\4=\t=\4>\t>\4?\t?\4@\t@\4A\tA\4B\tB\4C\t")
        buf.write("C\3\2\3\2\3\3\3\3\3\4\3\4\3\5\3\5\3\6\3\6\3\7\3\7\3\b")
        buf.write("\3\b\3\t\3\t\3\n\3\n\3\13\3\13\3\13\3\13\3\f\3\f\3\r\3")
        buf.write("\r\3\16\3\16\3\17\3\17\3\17\3\17\3\20\3\20\3\20\3\20\3")
        buf.write("\20\3\20\3\20\3\21\3\21\3\22\3\22\3\22\3\22\3\23\3\23")
        buf.write("\3\23\3\23\3\24\3\24\3\24\3\24\3\25\3\25\3\25\3\25\3\25")
        buf.write("\3\26\3\26\3\26\3\26\3\26\3\27\3\27\3\27\3\27\3\30\3\30")
        buf.write("\3\30\3\30\3\30\3\30\3\30\3\30\3\31\3\31\3\31\3\31\3\31")
        buf.write("\3\31\3\31\3\31\3\31\3\32\3\32\3\32\3\32\3\33\3\33\3\34")
        buf.write("\3\34\3\34\3\34\3\34\3\35\3\35\3\35\3\35\3\36\3\36\3\37")
        buf.write("\3\37\3\37\3\37\3 \3 \3!\3!\3!\3!\3\"\3\"\3\"\3\"\3#\3")
        buf.write("#\3#\3#\3$\3$\3$\3$\3%\3%\3%\3%\3&\3&\3&\3&\3\'\3\'\3")
        buf.write("\'\3\'\3(\3(\3(\3(\3)\3)\3)\3)\3)\3)\3*\3*\3*\3*\3*\3")
        buf.write("+\3+\3,\3,\3,\3,\3-\3-\3-\3-\3.\3.\3.\3.\3/\3/\3/\3/\3")
        buf.write("\60\3\60\3\60\3\60\3\61\3\61\3\61\3\61\3\62\3\62\3\62")
        buf.write("\3\62\3\63\3\63\3\63\3\63\3\63\3\64\3\64\3\64\3\64\3\64")
        buf.write("\3\65\3\65\3\65\3\65\3\66\3\66\3\66\3\66\3\67\3\67\3\67")
        buf.write("\3\67\38\38\38\39\39\39\39\3:\3:\3:\3:\3;\3;\3;\3;\3<")
        buf.write("\6<\u0162\n<\r<\16<\u0163\3=\3=\3=\6=\u0169\n=\r=\16=")
        buf.write("\u016a\3>\3>\3>\6>\u0170\n>\r>\16>\u0171\3?\3?\3?\6?\u0177")
        buf.write("\n?\r?\16?\u0178\3@\3@\7@\u017d\n@\f@\16@\u0180\13@\3")
        buf.write("A\3A\3A\3A\3A\7A\u0187\nA\fA\16A\u018a\13A\3A\3A\3A\3")
        buf.write("A\3A\3A\3B\3B\3B\3B\7B\u0196\nB\fB\16B\u0199\13B\3B\6")
        buf.write("B\u019c\nB\rB\16B\u019d\3B\3B\3C\6C\u01a3\nC\rC\16C\u01a4")
        buf.write("\3C\3C\4\u0188\u0197\2D\3\3\5\4\7\5\t\6\13\7\r\b\17\t")
        buf.write("\21\n\23\13\25\f\27\r\31\16\33\17\35\20\37\21!\22#\23")
        buf.write("%\24\'\25)\26+\27-\30/\31\61\32\63\33\65\34\67\359\36")
        buf.write(";\37= ?!A\"C#E$G%I&K\'M(O)Q*S+U,W-Y.[/]\60_\61a\62c\63")
        buf.write("e\64g\65i\66k\67m8o9q:s;u<w=y>{?}@\177A\u0081B\u0083C")
        buf.write("\u0085D\3\2\r\3\2\62;\4\2DDdd\3\2\62\63\4\2QQqq\3\2\62")
        buf.write("9\4\2ZZzz\5\2\62;CHch\5\2C\\aac|\6\2\62;C\\aac|\4\2\f")
        buf.write("\f\17\17\5\2\13\f\17\17\"\"\2\u01b0\2\3\3\2\2\2\2\5\3")
        buf.write("\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2")
        buf.write("\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2")
        buf.write("\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2")
        buf.write("\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2")
        buf.write("\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3")
        buf.write("\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2")
        buf.write("\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2")
        buf.write("\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3")
        buf.write("\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W")
        buf.write("\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2")
        buf.write("a\3\2\2\2\2c\3\2\2\2\2e\3\2\2\2\2g\3\2\2\2\2i\3\2\2\2")
        buf.write("\2k\3\2\2\2\2m\3\2\2\2\2o\3\2\2\2\2q\3\2\2\2\2s\3\2\2")
        buf.write("\2\2u\3\2\2\2\2w\3\2\2\2\2y\3\2\2\2\2{\3\2\2\2\2}\3\2")
        buf.write("\2\2\2\177\3\2\2\2\2\u0081\3\2\2\2\2\u0083\3\2\2\2\2\u0085")
        buf.write("\3\2\2\2\3\u0087\3\2\2\2\5\u0089\3\2\2\2\7\u008b\3\2\2")
        buf.write("\2\t\u008d\3\2\2\2\13\u008f\3\2\2\2\r\u0091\3\2\2\2\17")
        buf.write("\u0093\3\2\2\2\21\u0095\3\2\2\2\23\u0097\3\2\2\2\25\u0099")
        buf.write("\3\2\2\2\27\u009d\3\2\2\2\31\u009f\3\2\2\2\33\u00a1\3")
        buf.write("\2\2\2\35\u00a3\3\2\2\2\37\u00a7\3\2\2\2!\u00ae\3\2\2")
        buf.write("\2#\u00b0\3\2\2\2%\u00b4\3\2\2\2\'\u00b8\3\2\2\2)\u00bc")
        buf.write("\3\2\2\2+\u00c1\3\2\2\2-\u00c6\3\2\2\2/\u00ca\3\2\2\2")
        buf.write("\61\u00d2\3\2\2\2\63\u00db\3\2\2\2\65\u00df\3\2\2\2\67")
        buf.write("\u00e1\3\2\2\29\u00e6\3\2\2\2;\u00ea\3\2\2\2=\u00ec\3")
        buf.write("\2\2\2?\u00f0\3\2\2\2A\u00f2\3\2\2\2C\u00f6\3\2\2\2E\u00fa")
        buf.write("\3\2\2\2G\u00fe\3\2\2\2I\u0102\3\2\2\2K\u0106\3\2\2\2")
        buf.write("M\u010a\3\2\2\2O\u010e\3\2\2\2Q\u0112\3\2\2\2S\u0118\3")
        buf.write("\2\2\2U\u011d\3\2\2\2W\u011f\3\2\2\2Y\u0123\3\2\2\2[\u0127")
        buf.write("\3\2\2\2]\u012b\3\2\2\2_\u012f\3\2\2\2a\u0133\3\2\2\2")
        buf.write("c\u0137\3\2\2\2e\u013b\3\2\2\2g\u0140\3\2\2\2i\u0145\3")
        buf.write("\2\2\2k\u0149\3\2\2\2m\u014d\3\2\2\2o\u0151\3\2\2\2q\u0154")
        buf.write("\3\2\2\2s\u0158\3\2\2\2u\u015c\3\2\2\2w\u0161\3\2\2\2")
        buf.write("y\u0165\3\2\2\2{\u016c\3\2\2\2}\u0173\3\2\2\2\177\u017a")
        buf.write("\3\2\2\2\u0081\u0181\3\2\2\2\u0083\u0191\3\2\2\2\u0085")
        buf.write("\u01a2\3\2\2\2\u0087\u0088\7*\2\2\u0088\4\3\2\2\2\u0089")
        buf.write("\u008a\7+\2\2\u008a\6\3\2\2\2\u008b\u008c\7,\2\2\u008c")
        buf.write("\b\3\2\2\2\u008d\u008e\7\61\2\2\u008e\n\3\2\2\2\u008f")
        buf.write("\u0090\7\'\2\2\u0090\f\3\2\2\2\u0091\u0092\7-\2\2\u0092")
        buf.write("\16\3\2\2\2\u0093\u0094\7/\2\2\u0094\20\3\2\2\2\u0095")
        buf.write("\u0096\7}\2\2\u0096\22\3\2\2\2\u0097\u0098\7\177\2\2\u0098")
        buf.write("\24\3\2\2\2\u0099\u009a\7I\2\2\u009a\u009b\7G\2\2\u009b")
        buf.write("\u009c\7V\2\2\u009c\26\3\2\2\2\u009d\u009e\7]\2\2\u009e")
        buf.write("\30\3\2\2\2\u009f\u00a0\7_\2\2\u00a0\32\3\2\2\2\u00a1")
        buf.write("\u00a2\7>\2\2\u00a2\34\3\2\2\2\u00a3\u00a4\7C\2\2\u00a4")
        buf.write("\u00a5\7F\2\2\u00a5\u00a6\7X\2\2\u00a6\36\3\2\2\2\u00a7")
        buf.write("\u00a8\7P\2\2\u00a8\u00a9\7Q\2\2\u00a9\u00aa\7a\2\2\u00aa")
        buf.write("\u00ab\7C\2\2\u00ab\u00ac\7F\2\2\u00ac\u00ad\7X\2\2\u00ad")
        buf.write(" \3\2\2\2\u00ae\u00af\7@\2\2\u00af\"\3\2\2\2\u00b0\u00b1")
        buf.write("\7R\2\2\u00b1\u00b2\7W\2\2\u00b2\u00b3\7V\2\2\u00b3$\3")
        buf.write("\2\2\2\u00b4\u00b5\7T\2\2\u00b5\u00b6\7G\2\2\u00b6\u00b7")
        buf.write("\7I\2\2\u00b7&\3\2\2\2\u00b8\u00b9\7T\2\2\u00b9\u00ba")
        buf.write("\7C\2\2\u00ba\u00bb\7O\2\2\u00bb(\3\2\2\2\u00bc\u00bd")
        buf.write("\7T\2\2\u00bd\u00be\7Q\2\2\u00be\u00bf\7O\2\2\u00bf\u00c0")
        buf.write("\7C\2\2\u00c0*\3\2\2\2\u00c1\u00c2\7T\2\2\u00c2\u00c3")
        buf.write("\7Q\2\2\u00c3\u00c4\7O\2\2\u00c4\u00c5\7D\2\2\u00c5,\3")
        buf.write("\2\2\2\u00c6\u00c7\7D\2\2\u00c7\u00c8\7C\2\2\u00c8\u00c9")
        buf.write("\7O\2\2\u00c9.\3\2\2\2\u00ca\u00cb\7H\2\2\u00cb\u00cc")
        buf.write("\7Q\2\2\u00cc\u00cd\7T\2\2\u00cd\u00ce\7Y\2\2\u00ce\u00cf")
        buf.write("\7C\2\2\u00cf\u00d0\7T\2\2\u00d0\u00d1\7F\2\2\u00d1\60")
        buf.write("\3\2\2\2\u00d2\u00d3\7D\2\2\u00d3\u00d4\7C\2\2\u00d4\u00d5")
        buf.write("\7E\2\2\u00d5\u00d6\7M\2\2\u00d6\u00d7\7Y\2\2\u00d7\u00d8")
        buf.write("\7C\2\2\u00d8\u00d9\7T\2\2\u00d9\u00da\7F\2\2\u00da\62")
        buf.write("\3\2\2\2\u00db\u00dc\7\\\2\2\u00dc\u00dd\7Q\2\2\u00dd")
        buf.write("\u00de\7N\2\2\u00de\64\3\2\2\2\u00df\u00e0\7<\2\2\u00e0")
        buf.write("\66\3\2\2\2\u00e1\u00e2\7N\2\2\u00e2\u00e3\7Q\2\2\u00e3")
        buf.write("\u00e4\7Q\2\2\u00e4\u00e5\7R\2\2\u00e58\3\2\2\2\u00e6")
        buf.write("\u00e7\7F\2\2\u00e7\u00e8\7G\2\2\u00e8\u00e9\7H\2\2\u00e9")
        buf.write(":\3\2\2\2\u00ea\u00eb\7=\2\2\u00eb<\3\2\2\2\u00ec\u00ed")
        buf.write("\7E\2\2\u00ed\u00ee\7Q\2\2\u00ee\u00ef\7O\2\2\u00ef>\3")
        buf.write("\2\2\2\u00f0\u00f1\7.\2\2\u00f1@\3\2\2\2\u00f2\u00f3\7")
        buf.write("P\2\2\u00f3\u00f4\7Q\2\2\u00f4\u00f5\7R\2\2\u00f5B\3\2")
        buf.write("\2\2\u00f6\u00f7\7L\2\2\u00f7\u00f8\7O\2\2\u00f8\u00f9")
        buf.write("\7R\2\2\u00f9D\3\2\2\2\u00fa\u00fb\7L\2\2\u00fb\u00fc")
        buf.write("\7G\2\2\u00fc\u00fd\7S\2\2\u00fdF\3\2\2\2\u00fe\u00ff")
        buf.write("\7L\2\2\u00ff\u0100\7P\2\2\u0100\u0101\7G\2\2\u0101H\3")
        buf.write("\2\2\2\u0102\u0103\7L\2\2\u0103\u0104\7N\2\2\u0104\u0105")
        buf.write("\7V\2\2\u0105J\3\2\2\2\u0106\u0107\7L\2\2\u0107\u0108")
        buf.write("\7N\2\2\u0108\u0109\7G\2\2\u0109L\3\2\2\2\u010a\u010b")
        buf.write("\7L\2\2\u010b\u010c\7I\2\2\u010c\u010d\7V\2\2\u010dN\3")
        buf.write("\2\2\2\u010e\u010f\7L\2\2\u010f\u0110\7I\2\2\u0110\u0111")
        buf.write("\7G\2\2\u0111P\3\2\2\2\u0112\u0113\7T\2\2\u0113\u0114")
        buf.write("\7G\2\2\u0114\u0115\7U\2\2\u0115\u0116\7G\2\2\u0116\u0117")
        buf.write("\7V\2\2\u0117R\3\2\2\2\u0118\u0119\7U\2\2\u0119\u011a")
        buf.write("\7G\2\2\u011a\u011b\7G\2\2\u011b\u011c\7M\2\2\u011cT\3")
        buf.write("\2\2\2\u011d\u011e\7\60\2\2\u011eV\3\2\2\2\u011f\u0120")
        buf.write("\7U\2\2\u0120\u0121\7G\2\2\u0121\u0122\7V\2\2\u0122X\3")
        buf.write("\2\2\2\u0123\u0124\7O\2\2\u0124\u0125\7Q\2\2\u0125\u0126")
        buf.write("\7X\2\2\u0126Z\3\2\2\2\u0127\u0128\7P\2\2\u0128\u0129")
        buf.write("\7Q\2\2\u0129\u012a\7V\2\2\u012a\\\3\2\2\2\u012b\u012c")
        buf.write("\7N\2\2\u012c\u012d\7U\2\2\u012d\u012e\7J\2\2\u012e^\3")
        buf.write("\2\2\2\u012f\u0130\7T\2\2\u0130\u0131\7U\2\2\u0131\u0132")
        buf.write("\7J\2\2\u0132`\3\2\2\2\u0133\u0134\7N\2\2\u0134\u0135")
        buf.write("\7T\2\2\u0135\u0136\7N\2\2\u0136b\3\2\2\2\u0137\u0138")
        buf.write("\7T\2\2\u0138\u0139\7T\2\2\u0139\u013a\7N\2\2\u013ad\3")
        buf.write("\2\2\2\u013b\u013c\7W\2\2\u013c\u013d\7E\2\2\u013d\u013e")
        buf.write("\7O\2\2\u013e\u013f\7R\2\2\u013ff\3\2\2\2\u0140\u0141")
        buf.write("\7U\2\2\u0141\u0142\7E\2\2\u0142\u0143\7O\2\2\u0143\u0144")
        buf.write("\7R\2\2\u0144h\3\2\2\2\u0145\u0146\7C\2\2\u0146\u0147")
        buf.write("\7F\2\2\u0147\u0148\7F\2\2\u0148j\3\2\2\2\u0149\u014a")
        buf.write("\7U\2\2\u014a\u014b\7W\2\2\u014b\u014c\7D\2\2\u014cl\3")
        buf.write("\2\2\2\u014d\u014e\7C\2\2\u014e\u014f\7P\2\2\u014f\u0150")
        buf.write("\7F\2\2\u0150n\3\2\2\2\u0151\u0152\7Q\2\2\u0152\u0153")
        buf.write("\7T\2\2\u0153p\3\2\2\2\u0154\u0155\7Z\2\2\u0155\u0156")
        buf.write("\7Q\2\2\u0156\u0157\7T\2\2\u0157r\3\2\2\2\u0158\u0159")
        buf.write("\7O\2\2\u0159\u015a\7W\2\2\u015a\u015b\7N\2\2\u015bt\3")
        buf.write("\2\2\2\u015c\u015d\7C\2\2\u015d\u015e\7E\2\2\u015e\u015f")
        buf.write("\7E\2\2\u015fv\3\2\2\2\u0160\u0162\t\2\2\2\u0161\u0160")
        buf.write("\3\2\2\2\u0162\u0163\3\2\2\2\u0163\u0161\3\2\2\2\u0163")
        buf.write("\u0164\3\2\2\2\u0164x\3\2\2\2\u0165\u0166\7\62\2\2\u0166")
        buf.write("\u0168\t\3\2\2\u0167\u0169\t\4\2\2\u0168\u0167\3\2\2\2")
        buf.write("\u0169\u016a\3\2\2\2\u016a\u0168\3\2\2\2\u016a\u016b\3")
        buf.write("\2\2\2\u016bz\3\2\2\2\u016c\u016d\7\62\2\2\u016d\u016f")
        buf.write("\t\5\2\2\u016e\u0170\t\6\2\2\u016f\u016e\3\2\2\2\u0170")
        buf.write("\u0171\3\2\2\2\u0171\u016f\3\2\2\2\u0171\u0172\3\2\2\2")
        buf.write("\u0172|\3\2\2\2\u0173\u0174\7\62\2\2\u0174\u0176\t\7\2")
        buf.write("\2\u0175\u0177\t\b\2\2\u0176\u0175\3\2\2\2\u0177\u0178")
        buf.write("\3\2\2\2\u0178\u0176\3\2\2\2\u0178\u0179\3\2\2\2\u0179")
        buf.write("~\3\2\2\2\u017a\u017e\t\t\2\2\u017b\u017d\t\n\2\2\u017c")
        buf.write("\u017b\3\2\2\2\u017d\u0180\3\2\2\2\u017e\u017c\3\2\2\2")
        buf.write("\u017e\u017f\3\2\2\2\u017f\u0080\3\2\2\2\u0180\u017e\3")
        buf.write("\2\2\2\u0181\u0182\7\61\2\2\u0182\u0183\7\61\2\2\u0183")
        buf.write("\u0184\7,\2\2\u0184\u0188\3\2\2\2\u0185\u0187\13\2\2\2")
        buf.write("\u0186\u0185\3\2\2\2\u0187\u018a\3\2\2\2\u0188\u0189\3")
        buf.write("\2\2\2\u0188\u0186\3\2\2\2\u0189\u018b\3\2\2\2\u018a\u0188")
        buf.write("\3\2\2\2\u018b\u018c\7,\2\2\u018c\u018d\7\61\2\2\u018d")
        buf.write("\u018e\7\61\2\2\u018e\u018f\3\2\2\2\u018f\u0190\bA\2\2")
        buf.write("\u0190\u0082\3\2\2\2\u0191\u0192\7\61\2\2\u0192\u0193")
        buf.write("\7\61\2\2\u0193\u0197\3\2\2\2\u0194\u0196\13\2\2\2\u0195")
        buf.write("\u0194\3\2\2\2\u0196\u0199\3\2\2\2\u0197\u0198\3\2\2\2")
        buf.write("\u0197\u0195\3\2\2\2\u0198\u019b\3\2\2\2\u0199\u0197\3")
        buf.write("\2\2\2\u019a\u019c\t\13\2\2\u019b\u019a\3\2\2\2\u019c")
        buf.write("\u019d\3\2\2\2\u019d\u019b\3\2\2\2\u019d\u019e\3\2\2\2")
        buf.write("\u019e\u019f\3\2\2\2\u019f\u01a0\bB\2\2\u01a0\u0084\3")
        buf.write("\2\2\2\u01a1\u01a3\t\f\2\2\u01a2\u01a1\3\2\2\2\u01a3\u01a4")
        buf.write("\3\2\2\2\u01a4\u01a2\3\2\2\2\u01a4\u01a5\3\2\2\2\u01a5")
        buf.write("\u01a6\3\2\2\2\u01a6\u01a7\bC\2\2\u01a7\u0086\3\2\2\2")
        buf.write("\f\2\u0163\u016a\u0171\u0178\u017e\u0188\u0197\u019d\u01a4")
        buf.write("\3\b\2\2")
        return buf.getvalue()


class FPE_assemblyLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    T__26 = 27
    T__27 = 28
    T__28 = 29
    T__29 = 30
    T__30 = 31
    T__31 = 32
    T__32 = 33
    T__33 = 34
    T__34 = 35
    T__35 = 36
    T__36 = 37
    T__37 = 38
    T__38 = 39
    T__39 = 40
    T__40 = 41
    T__41 = 42
    T__42 = 43
    T__43 = 44
    T__44 = 45
    T__45 = 46
    T__46 = 47
    T__47 = 48
    T__48 = 49
    T__49 = 50
    T__50 = 51
    T__51 = 52
    T__52 = 53
    T__53 = 54
    T__54 = 55
    T__55 = 56
    T__56 = 57
    T__57 = 58
    DEC_NUM = 59
    BIN_NUM = 60
    OCT_NUM = 61
    HEX_NUM = 62
    IDENTIFER = 63
    MUTL_LINE_COMMENT = 64
    SING_LINE_COMMENT = 65
    WHITESPACE = 66

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'('", "')'", "'*'", "'/'", "'%'", "'+'", "'-'", "'{'", "'}'", 
            "'GET'", "'['", "']'", "'<'", "'ADV'", "'NO_ADV'", "'>'", "'PUT'", 
            "'REG'", "'RAM'", "'ROMA'", "'ROMB'", "'BAM'", "'FORWARD'", 
            "'BACKWARD'", "'ZOL'", "':'", "'LOOP'", "'DEF'", "';'", "'COM'", 
            "','", "'NOP'", "'JMP'", "'JEQ'", "'JNE'", "'JLT'", "'JLE'", 
            "'JGT'", "'JGE'", "'RESET'", "'SEEK'", "'.'", "'SET'", "'MOV'", 
            "'NOT'", "'LSH'", "'RSH'", "'LRL'", "'RRL'", "'UCMP'", "'SCMP'", 
            "'ADD'", "'SUB'", "'AND'", "'OR'", "'XOR'", "'MUL'", "'ACC'" ]

    symbolicNames = [ "<INVALID>",
            "DEC_NUM", "BIN_NUM", "OCT_NUM", "HEX_NUM", "IDENTIFER", "MUTL_LINE_COMMENT", 
            "SING_LINE_COMMENT", "WHITESPACE" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", 
                  "T__32", "T__33", "T__34", "T__35", "T__36", "T__37", 
                  "T__38", "T__39", "T__40", "T__41", "T__42", "T__43", 
                  "T__44", "T__45", "T__46", "T__47", "T__48", "T__49", 
                  "T__50", "T__51", "T__52", "T__53", "T__54", "T__55", 
                  "T__56", "T__57", "DEC_NUM", "BIN_NUM", "OCT_NUM", "HEX_NUM", 
                  "IDENTIFER", "MUTL_LINE_COMMENT", "SING_LINE_COMMENT", 
                  "WHITESPACE" ]

    grammarFileName = "FPE_assembly.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.7.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


