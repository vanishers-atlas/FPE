{
  COM inter_ZOL : ZOL_counter(
    iterations : 60,
    seekable : true,
    settable : true
  );

  COM outer_ZOL : ZOL_counter(
    iterations : 2,
    seekable : true,
    settable : true
  );


  inter_ZOL.SEEK(solo_single_instr_30);
  inter_ZOL.SET(30);
  NOP;
  NOP;
  NOP;

  LOOP solo_single_instr_30 :
  {
    MOV (0b0000, PUT[0]);
  }



  inter_ZOL.SEEK(solo_single_instr_60);
  inter_ZOL.SET(60);
  NOP;
  NOP;
  NOP;

  LOOP solo_single_instr_60 :
  {
    MOV (0b0001, PUT[0]);
  }



  inter_ZOL.SEEK(solo_multi_instr_30);
  inter_ZOL.SET(30);
  NOP;
  NOP;
  NOP;

  LOOP solo_multi_instr_30 :
  {
    MOV (0b0100, PUT[0]);
    MOV (0b0110, PUT[0]);
  }


  inter_ZOL.SEEK(solo_multi_instr_60);
  inter_ZOL.SET(60);
  NOP;
  NOP;
  NOP;

  LOOP solo_multi_instr_60 :
  {
    MOV (0b0101, PUT[0]);
    MOV (0b0111, PUT[0]);
  }


  outer_ZOL.SEEK(nested_outer_2);
  outer_ZOL.SET(2);
  NOP;
  NOP;
  NOP;

  LOOP nested_outer_2 :
  {

    inter_ZOL.SEEK(nested_single_instr_30);
    inter_ZOL.SET(30);
    NOP;
    NOP;
    NOP;

    LOOP nested_single_instr_30 :
    {
      MOV (0b1000, PUT[0]);
    }



    inter_ZOL.SEEK(nested_single_instr_60);
    inter_ZOL.SET(60);
    NOP;
    NOP;
    NOP;

    LOOP nested_single_instr_60 :
    {
      MOV (0b1001, PUT[0]);
    }



    inter_ZOL.SEEK(nested_multi_instr_30);
    inter_ZOL.SET(30);
    NOP;
    NOP;
    NOP;

    LOOP nested_multi_instr_30 :
    {
      MOV (0b1100, PUT[0]);
      MOV (0b1110, PUT[0]);
    }


    inter_ZOL.SEEK(nested_multi_instr_60);
    inter_ZOL.SET(60);
    NOP;
    NOP;
    NOP;

    LOOP nested_multi_instr_60 :
    {
      MOV (0b1101, PUT[0]);
      MOV (0b1111, PUT[0]);
    }
    NOP;
  }
  NOP;
}
