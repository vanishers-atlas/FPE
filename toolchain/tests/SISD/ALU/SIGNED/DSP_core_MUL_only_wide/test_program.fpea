{
  // Test MOV
  MOV(0b0000000000000000000000000000000000000000, PUT[0]);
  MOV(ACC, PUT[0]);
  MOV(0b0000000000000000000011111111111111111111, PUT[0]);
  MOV(ACC, PUT[0]);
  MOV(0b1111111111111111111100000000000000000000, PUT[0]);
  MOV(ACC, PUT[0]);
  MOV(0b1111111111111111111111111111111111111111, PUT[0]);
  MOV(ACC, PUT[0]);

  NOP; NOP; NOP; NOP;


  // Test parallel left shifts and rolls
  LSH(0b0001000100010001000100010001000100010001, 1, PUT[0]);
  LSH(ACC, 1, PUT[0]);
  LSH(ACC, 1, PUT[0]);
  LSH(ACC, 1, PUT[0]);
  NOP;

  LSH(0b0010001000100010001000100010001000100010, 1, PUT[0]);
  LSH(ACC, 1, PUT[0]);
  LSH(ACC, 1, PUT[0]);
  LSH(ACC, 1, PUT[0]);
  NOP;

  LSH(0b0100010001000100010001000100010001000100, 1, PUT[0]);
  LSH(ACC, 1, PUT[0]);
  LSH(ACC, 1, PUT[0]);
  LSH(ACC, 1, PUT[0]);
  NOP;

  LSH(0b1000100010001000100010001000100010001000, 1, PUT[0]);
  LSH(ACC, 1, PUT[0]);
  LSH(ACC, 1, PUT[0]);
  LSH(ACC, 1, PUT[0]);
  NOP;

  NOP; NOP; NOP; NOP;

  LSH(0b0001000100010001000100010001000100010001, 2, PUT[0]);
  LSH(ACC, 2, PUT[0]);
  LSH(ACC, 2, PUT[0]);
  LSH(ACC, 2, PUT[0]);
  NOP;

  LSH(0b0010001000100010001000100010001000100010, 2, PUT[0]);
  LSH(ACC, 2, PUT[0]);
  LSH(ACC, 2, PUT[0]);
  LSH(ACC, 2, PUT[0]);
  NOP;

  LSH(0b0100010001000100010001000100010001000100, 2, PUT[0]);
  LSH(ACC, 2, PUT[0]);
  LSH(ACC, 2, PUT[0]);
  LSH(ACC, 2, PUT[0]);
  NOP;

  LSH(0b1000100010001000100010001000100010001000, 2, PUT[0]);
  LSH(ACC, 2, PUT[0]);
  LSH(ACC, 2, PUT[0]);
  LSH(ACC, 2, PUT[0]);
  NOP;

  NOP; NOP; NOP; NOP;

  LSH(0b0001000100010001000100010001000100010001, 3, PUT[0]);
  LSH(ACC, 3, PUT[0]);
  LSH(ACC, 3, PUT[0]);
  LSH(ACC, 3, PUT[0]);
  NOP;

  LSH(0b0010001000100010001000100010001000100010, 3, PUT[0]);
  LSH(ACC, 3, PUT[0]);
  LSH(ACC, 3, PUT[0]);
  LSH(ACC, 3, PUT[0]);
  NOP;

  LSH(0b0100010001000100010001000100010001000100, 3, PUT[0]);
  LSH(ACC, 3, PUT[0]);
  LSH(ACC, 3, PUT[0]);
  LSH(ACC, 3, PUT[0]);
  NOP;

  LSH(0b1000100010001000100010001000100010001000, 3, PUT[0]);
  LSH(ACC, 3, PUT[0]);
  LSH(ACC, 3, PUT[0]);
  LSH(ACC, 3, PUT[0]);
  NOP;

  NOP; NOP; NOP; NOP;


  LRL(0b0001000100010001000100010001000100010001, 1, PUT[0]);
  LRL(ACC, 1, PUT[0]);
  LRL(ACC, 1, PUT[0]);
  LRL(ACC, 1, PUT[0]);
  NOP;

  LRL(0b0010001000100010001000100010001000100010, 1, PUT[0]);
  LRL(ACC, 1, PUT[0]);
  LRL(ACC, 1, PUT[0]);
  LRL(ACC, 1, PUT[0]);
  NOP;

  LRL(0b0100010001000100010001000100010001000100, 1, PUT[0]);
  LRL(ACC, 1, PUT[0]);
  LRL(ACC, 1, PUT[0]);
  LRL(ACC, 1, PUT[0]);
  NOP;

  LRL(0b1000100010001000100010001000100010001000, 1, PUT[0]);
  LRL(ACC, 1, PUT[0]);
  LRL(ACC, 1, PUT[0]);
  LRL(ACC, 1, PUT[0]);
  NOP;

  NOP; NOP; NOP; NOP;

  LRL(0b0001000100010001000100010001000100010001, 2, PUT[0]);
  LRL(ACC, 2, PUT[0]);
  LRL(ACC, 2, PUT[0]);
  LRL(ACC, 2, PUT[0]);
  NOP;

  LRL(0b0010001000100010001000100010001000100010, 2, PUT[0]);
  LRL(ACC, 2, PUT[0]);
  LRL(ACC, 2, PUT[0]);
  LRL(ACC, 2, PUT[0]);
  NOP;

  LRL(0b0100010001000100010001000100010001000100, 2, PUT[0]);
  LRL(ACC, 2, PUT[0]);
  LRL(ACC, 2, PUT[0]);
  LRL(ACC, 2, PUT[0]);
  NOP;

  LRL(0b1000100010001000100010001000100010001000, 2, PUT[0]);
  LRL(ACC, 2, PUT[0]);
  LRL(ACC, 2, PUT[0]);
  LRL(ACC, 2, PUT[0]);
  NOP;

  NOP; NOP; NOP; NOP;

  LRL(0b0001000100010001000100010001000100010001, 3, PUT[0]);
  LRL(ACC, 3, PUT[0]);
  LRL(ACC, 3, PUT[0]);
  LRL(ACC, 3, PUT[0]);
  NOP;

  LRL(0b0010001000100010001000100010001000100010, 3, PUT[0]);
  LRL(ACC, 3, PUT[0]);
  LRL(ACC, 3, PUT[0]);
  LRL(ACC, 3, PUT[0]);
  NOP;

  LRL(0b0100010001000100010001000100010001000100, 3, PUT[0]);
  LRL(ACC, 3, PUT[0]);
  LRL(ACC, 3, PUT[0]);
  LRL(ACC, 3, PUT[0]);
  NOP;

  LRL(0b1000100010001000100010001000100010001000, 3, PUT[0]);
  LRL(ACC, 3, PUT[0]);
  LRL(ACC, 3, PUT[0]);
  LRL(ACC, 3, PUT[0]);
  NOP;

  NOP; NOP; NOP; NOP;


  // Test parallel right shifts and rolls
  RSH(0b1000100010001000100010001000100010001000, 1, PUT[0]);
  RSH(ACC, 1, PUT[0]);
  RSH(ACC, 1, PUT[0]);
  RSH(ACC, 1, PUT[0]);
  NOP;

  RSH(0b0100010001000100010001000100010001000100, 1, PUT[0]);
  RSH(ACC, 1, PUT[0]);
  RSH(ACC, 1, PUT[0]);
  RSH(ACC, 1, PUT[0]);
  NOP;

  RSH(0b0010001000100010001000100010001000100010, 1, PUT[0]);
  RSH(ACC, 1, PUT[0]);
  RSH(ACC, 1, PUT[0]);
  RSH(ACC, 1, PUT[0]);
  NOP;

  RSH(0b0001000100010001000100010001000100010001, 1, PUT[0]);
  RSH(ACC, 1, PUT[0]);
  RSH(ACC, 1, PUT[0]);
  RSH(ACC, 1, PUT[0]);
  NOP;

  NOP; NOP; NOP; NOP;

  RSH(0b1000100010001000100010001000100010001000, 2, PUT[0]);
  RSH(ACC, 2, PUT[0]);
  RSH(ACC, 2, PUT[0]);
  RSH(ACC, 2, PUT[0]);
  NOP;

  RSH(0b0100010001000100010001000100010001000100, 2, PUT[0]);
  RSH(ACC, 2, PUT[0]);
  RSH(ACC, 2, PUT[0]);
  RSH(ACC, 2, PUT[0]);
  NOP;

  RSH(0b0010001000100010001000100010001000100010, 2, PUT[0]);
  RSH(ACC, 2, PUT[0]);
  RSH(ACC, 2, PUT[0]);
  RSH(ACC, 2, PUT[0]);
  NOP;

  RSH(0b0001000100010001000100010001000100010001, 2, PUT[0]);
  RSH(ACC, 2, PUT[0]);
  RSH(ACC, 2, PUT[0]);
  RSH(ACC, 2, PUT[0]);
  NOP;

  NOP; NOP; NOP; NOP;

  RSH(0b1000100010001000100010001000100010001000, 3, PUT[0]);
  RSH(ACC, 3, PUT[0]);
  RSH(ACC, 3, PUT[0]);
  RSH(ACC, 3, PUT[0]);
  NOP;

  RSH(0b0100010001000100010001000100010001000100, 3, PUT[0]);
  RSH(ACC, 3, PUT[0]);
  RSH(ACC, 3, PUT[0]);
  RSH(ACC, 3, PUT[0]);
  NOP;

  RSH(0b0010001000100010001000100010001000100010, 3, PUT[0]);
  RSH(ACC, 3, PUT[0]);
  RSH(ACC, 3, PUT[0]);
  RSH(ACC, 3, PUT[0]);
  NOP;

  RSH(0b0001000100010001000100010001000100010001, 3, PUT[0]);
  RSH(ACC, 3, PUT[0]);
  RSH(ACC, 3, PUT[0]);
  RSH(ACC, 3, PUT[0]);
  NOP;

  NOP; NOP; NOP; NOP;


  RRL(0b1000100010001000100010001000100010001000, 1, PUT[0]);
  RRL(ACC, 1, PUT[0]);
  RRL(ACC, 1, PUT[0]);
  RRL(ACC, 1, PUT[0]);
  NOP;

  RRL(0b0100010001000100010001000100010001000100, 1, PUT[0]);
  RRL(ACC, 1, PUT[0]);
  RRL(ACC, 1, PUT[0]);
  RRL(ACC, 1, PUT[0]);
  NOP;

  RRL(0b0010001000100010001000100010001000100010, 1, PUT[0]);
  RRL(ACC, 1, PUT[0]);
  RRL(ACC, 1, PUT[0]);
  RRL(ACC, 1, PUT[0]);
  NOP;

  RRL(0b0001000100010001000100010001000100010001, 1, PUT[0]);
  RRL(ACC, 1, PUT[0]);
  RRL(ACC, 1, PUT[0]);
  RRL(ACC, 1, PUT[0]);
  NOP;

  NOP; NOP; NOP; NOP;

  RRL(0b1000100010001000100010001000100010001000, 2, PUT[0]);
  RRL(ACC, 2, PUT[0]);
  RRL(ACC, 2, PUT[0]);
  RRL(ACC, 2, PUT[0]);
  NOP;

  RRL(0b0100010001000100010001000100010001000100, 2, PUT[0]);
  RRL(ACC, 2, PUT[0]);
  RRL(ACC, 2, PUT[0]);
  RRL(ACC, 2, PUT[0]);
  NOP;

  RRL(0b0010001000100010001000100010001000100010, 2, PUT[0]);
  RRL(ACC, 2, PUT[0]);
  RRL(ACC, 2, PUT[0]);
  RRL(ACC, 2, PUT[0]);
  NOP;

  RRL(0b0001000100010001000100010001000100010001, 2, PUT[0]);
  RRL(ACC, 2, PUT[0]);
  RRL(ACC, 2, PUT[0]);
  RRL(ACC, 2, PUT[0]);
  NOP;

  NOP; NOP; NOP; NOP;

  RRL(0b1000100010001000100010001000100010001000, 3, PUT[0]);
  RRL(ACC, 3, PUT[0]);
  RRL(ACC, 3, PUT[0]);
  RRL(ACC, 3, PUT[0]);
  NOP;

  RRL(0b0100010001000100010001000100010001000100, 3, PUT[0]);
  RRL(ACC, 3, PUT[0]);
  RRL(ACC, 3, PUT[0]);
  RRL(ACC, 3, PUT[0]);
  NOP;

  RRL(0b0010001000100010001000100010001000100010, 3, PUT[0]);
  RRL(ACC, 3, PUT[0]);
  RRL(ACC, 3, PUT[0]);
  RRL(ACC, 3, PUT[0]);
  NOP;

  RRL(0b0001000100010001000100010001000100010001, 3, PUT[0]);
  RRL(ACC, 3, PUT[0]);
  RRL(ACC, 3, PUT[0]);
  RRL(ACC, 3, PUT[0]);
  NOP;

  NOP; NOP; NOP; NOP;

  // Test NOT
  NOT(0b0000000000000000000000000000000000000000, PUT[0]);
  NOT(ACC, PUT[0]);
  NOP;

  NOT(0b0000000000000000000011111111111111111111, PUT[0]);
  NOT(ACC, PUT[0]);
  NOP;

  NOT(0b1111111111111111111100000000000000000000, PUT[0]);
  NOT(ACC, PUT[0]);
  NOP;

  NOT(0b1111111111111111111111111111111111111111, PUT[0]);
  NOT(ACC, PUT[0]);
  NOP;

  NOP; NOP; NOP; NOP;

  // Test MUL
  MUL(0b0000000000000000000000000000000000000001, 0b0000000000000000000000000000000000000000, PUT[0]);
  MUL(0b0000000000000000000000000000000000000000, 0b0000000000000000000000000000000000000001, PUT[0]);
  MUL(0b0000000000000000000000000000000000000001, 0b0000000000000000000000000000000000000001, PUT[0]);
  MUL(0b0000000000000000000000000000111111111111, 0b0000000000000000000000000000000011111111, PUT[0]);
  NOP;

  MOV(0b0000000000000000000000000000000000000001, ACC);
  MUL(ACC, 0b0000000000000000000000000000000000000000, PUT[0]);
  MOV(0b0000000000000000000000000000000000000000, ACC);
  MUL(ACC, 0b0000000000000000000000000000000000000001, PUT[0]);
  MOV(0b0000000000000000000000000000000000000001, ACC);
  MUL(ACC, 0b0000000000000000000000000000000000000001, PUT[0]);
  MOV(0b0000000000000000000000000000111111111111, ACC);
  MUL(ACC, 0b0000000000000000000000000000000011111111, PUT[0]);
  NOP;

  MOV(0b0000000000000000000000000000000000000000, ACC);
  MUL(0b0000000000000000000000000000000000000001, ACC, PUT[0]);
  MOV(0b0000000000000000000000000000000000000001, ACC);
  MUL(0b0000000000000000000000000000000000000000, ACC, PUT[0]);
  MOV(0b0000000000000000000000000000000000000001, ACC);
  MUL(0b0000000000000000000000000000000000000001, ACC, PUT[0]);
  MOV(0b0000000000000000000000000000000011111111, ACC);
  MUL(0b0000000000000000000000000000111111111111, ACC, PUT[0]);
  NOP;

  MOV(0b0000000000000000000000000000000000000000, ACC);
  MUL(ACC, ACC, PUT[0]);
  MOV(0b0000000000000000000000000000000000000001, ACC);
  MUL(ACC, ACC, PUT[0]);
  MOV(0b0000000000000000000000000000000000000010, ACC);
  MUL(ACC, ACC, PUT[0]);
  MOV(0b0000000000000000000000000000000011111111, ACC);
  MUL(ACC, ACC, PUT[0]);
  NOP;

  NOP; NOP; NOP; NOP;

}
