{
  // Test basic (pass through) MOV,
  // already been tested by output test, but included for completeness
  MOV(0b0000, PUT[0]);
  MOV(0b0001, PUT[0]);
  MOV(0b0010, PUT[0]);
  MOV(ACC, PUT[0]);

  NOP;
  NOP;
  NOP;
  NOP;


  // Test ADD
  MOV(1, ACC);
  ADD(2, ACC, PUT[0]);
  MOV(3, ACC);
  ADD(4, ACC, PUT[0]);

  MOV(1, ACC);
  ADD(ACC, 2, PUT[0]);
  MOV(3, ACC);
  ADD(ACC, 4, PUT[0]);

  MOV(1, ACC);
  ADD(ACC, ACC, PUT[0]);
  MOV(2, ACC);
  ADD(ACC, ACC, PUT[0]);


  NOP;
  NOP;
  NOP;
  NOP;

  // Test SUB
  MOV(2, ACC);
  SUB(1, ACC, PUT[0]);
  MOV(1, ACC);
  SUB(2, ACC, PUT[0]);

  MOV(1, ACC);
  SUB(ACC, 2, PUT[0]);
  MOV(2, ACC);
  SUB(ACC, 1, PUT[0]);

  MOV(1, ACC);
  SUB(ACC, ACC, PUT[0]);
  MOV(2, ACC);
  SUB(ACC, ACC, PUT[0]);

  NOP;
  NOP;
  NOP;
  NOP;

  // Test NOT
  NOT(0b0110, PUT[0]);

  MOV(0b1001, ACC);
  NOT(ACC, PUT[0]);

  NOP;
  NOP;
  NOP;
  NOP;

  // Test OR
  MOV(0b0011, ACC);
  OR(0b0101, ACC, PUT[0]);

  MOV(0b0101, ACC);
  OR(ACC, 0b0011, PUT[0]);

  MOV(0b0101, ACC);
  OR(ACC, ACC, PUT[0]);

  NOP;
  NOP;
  NOP;
  NOP;

  // Test AND
  MOV(0b0011, ACC);
  AND(0b0101, ACC, PUT[0]);

  MOV(0b0101, ACC);
  AND(ACC, 0b0011, PUT[0]);

  MOV(0b0101, ACC);
  AND(ACC, ACC, PUT[0]);

  NOP;
  NOP;
  NOP;
  NOP;

  // Test XOR
  MOV(0b0011, ACC);
  XOR(0b0101, ACC, PUT[0]);

  MOV(0b0101, ACC);
  XOR(ACC, 0b0011, PUT[0]);

  MOV(0b0101, ACC);
  XOR(ACC, ACC, PUT[0]);


}
