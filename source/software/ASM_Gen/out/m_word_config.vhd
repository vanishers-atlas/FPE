library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;

package m_word_config is

---------------------------------------------------------
-- Type definition
--------------------------------------------------------- 
  type VDATA_TYPE is array (natural range <>) of std_logic_vector(15 downto 0);
  type VSIG_TYPE is array (natural range <>) of std_logic;
  
---------------------------------------------------------
-- Instruction Encoding
---------------------------------------------------------
  constant NOP : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(0, 6));
  constant ADDMUL_RRIR : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(1, 6));
  constant ADDMUL_RRMR : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(2, 6));
  constant SUBMUL_RRIR : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(3, 6));
  constant ADDMULFWD_RRIX : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(4, 6));
  constant SUBMULFWD_RRIX : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(5, 6));
  constant ADDMULSRA1_RRRR : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(6, 6));
  constant ADDMULSRA1_MRRR : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(7, 6));
  constant SUBMULSRA1_RRRR : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(8, 6));
  constant SUBMULSRA1_MRRR : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(9, 6));
  constant GET_RXFX : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(10, 6));
  constant PUT_FRRR : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(11, 6));
  constant GET_MXFX : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(12, 6));
  constant PUT_FRMR : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(13, 6));
  constant JMP : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(14, 6));
  constant SETSMRB_0 : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(15, 6));
  constant ADDMUL_RRRR : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(63, 6));
  constant ADDMUL_MRRR : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(63, 6));
  constant ADDMUL_MRIR : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(63, 6));
  constant ADDMUL_MRMR : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(63, 6));
  constant ADDMUL_FRRR : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(63, 6));
  constant ADDMUL_FRIR : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(63, 6));
  constant ADDMUL_FRMR : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(63, 6));
  constant ADDMUL_RRMM : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(63, 6));
  constant ADDMUL_MIMR : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(63, 6));
  constant SUBMUL_RRRR : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(63, 6));
  constant SUBMUL_RRMR : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(63, 6));
  constant SUBMUL_MRRR : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(63, 6));
  constant SUBMUL_MRIR : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(63, 6));
  constant SUBMUL_MRMR : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(63, 6));
  constant SUBMUL_FRRR : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(63, 6));
  constant SUBMUL_FRIR : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(63, 6));
  constant SUBMUL_FRMR : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(63, 6));
  constant ADDMULFWD_RRRX : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(63, 6));
  constant ADDMULFWD_RRMX : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(63, 6));
  constant ADDMULFWD_MRRX : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(63, 6));
  constant ADDMULFWD_MRIX : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(63, 6));
  constant ADDMULFWD_MRMX : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(63, 6));
  constant ADDMULFWD_FRRX : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(63, 6));
  constant ADDMULFWD_FRIX : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(63, 6));
  constant ADDMULFWD_FRMX : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(63, 6));
  constant ADDMULFWD_MIMX : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(63, 6));
  constant SUBMULFWD_RRRX : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(63, 6));
  constant SUBMULFWD_RRMX : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(63, 6));
  constant SUBMULFWD_MRRX : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(63, 6));
  constant SUBMULFWD_MRIX : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(63, 6));
  constant SUBMULFWD_MMRX : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(63, 6));
  constant SUBMULFWD_FRRX : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(63, 6));
  constant SUBMULFWD_FRIX : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(63, 6));
  constant SUBMULFWD_FRMX : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(63, 6));
  constant SUBMULFWD_MIMX : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(63, 6));
  constant ADDMULSRA1_RRIR : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(63, 6));
  constant ADDMULSRA1_RRMR : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(63, 6));
  constant ADDMULSRA1_MRIR : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(63, 6));
  constant ADDMULSRA1_MRMR : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(63, 6));
  constant ADDMULSRA1_FRRR : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(63, 6));
  constant ADDMULSRA1_FRIR : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(63, 6));
  constant ADDMULSRA1_FRMR : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(63, 6));
  constant SUBMULSRA1_RRIR : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(63, 6));
  constant SUBMULSRA1_RRMR : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(63, 6));
  constant SUBMULSRA1_MRIR : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(63, 6));
  constant SUBMULSRA1_MRMR : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(63, 6));
  constant SUBMULSRA1_FRRR : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(63, 6));
  constant SUBMULSRA1_FRIR : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(63, 6));
  constant SUBMULSRA1_FRMR : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(63, 6));
  constant ABSDIFF_RRRR : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(63, 6));
  constant ABSDIFF_RRIR : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(63, 6));
  constant ABSDIFF_RRMR : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(63, 6));
  constant ABSDIFF_MRRR : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(63, 6));
  constant ABSDIFF_MRIR : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(63, 6));
  constant ABSDIFF_MRMR : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(63, 6));
  constant ABSDIFF_FRRR : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(63, 6));
  constant ABSDIFF_FRIR : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(63, 6));
  constant ABSDIFF_FRMR : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(63, 6));
  constant ABSDIFF_RRMM : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(63, 6));
  constant ABSDIFFFWD_RRRX : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(63, 6));
  constant ABSDIFFACCUM_RXRR : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(63, 6));
  constant ABSDIFFACCUM_RXMM : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(63, 6));
  constant ABSDIFFCLR : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(63, 6));
  constant PUTFWD_FRRX : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(63, 6));
  constant GET_IXFX : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(63, 6));
  constant RPT : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(63, 6));
  constant RPTEND : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(63, 6));
  constant CMP_XXRR : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(63, 6));
  constant CMP_XXMR : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(63, 6));
  constant SETMASKEQ_XRRR : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(63, 6));
  constant SETMASKGT_XRRR : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(63, 6));
  constant SETMASKLT_XRRR : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(63, 6));
  constant MASKEND : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(63, 6));
  constant INCSMRB_0 : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(63, 6));
  constant INCSMWB_0 : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(63, 6));
  constant SETSMRBAUTOINCSIZE_0 : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(63, 6));
  constant SETSMWBAUTOINCSIZE_0 : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(63, 6));
  constant SETSMSIZE : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(63, 6));
  constant SETDMRB_0 : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(63, 6));
  constant SETDMRB_1 : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(63, 6));
  constant SETDMRB_2 : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(63, 6));
  constant SETDMRB_C0 : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(63, 6));
  constant SETDMWB_0 : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(63, 6));
  constant SETDMSIZE : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(63, 6));
  constant INCDMRB_0 : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(63, 6));
  constant INCDMRB_1 : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(63, 6));
  constant INCDMRB_2 : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(63, 6));
  constant INCDMRB_C0 : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(63, 6));
  constant INCDMWB_0 : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(63, 6));
  constant SETDMRBINIT_0 : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(63, 6));
  constant SETDMRBINIT_1 : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(63, 6));
  constant SETDMRBINIT_2 : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(63, 6));
  constant SETDMRBINIT_C0 : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(63, 6));
  constant SETDMWBINIT_0 : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(63, 6));
  constant SETDMRBAUTOINCSIZE_0 : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(63, 6));
  constant SETDMRBAUTOINCSIZE_1 : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(63, 6));
  constant SETDMRBAUTOINCSIZE_2 : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(63, 6));
  constant SETDMRBAUTOINCSIZE_C0 : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(63, 6));
  constant SETDMWBAUTOINCSIZE_0 : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(63, 6));
  constant SHIFTCACHELINE : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(63, 6));
  constant LDCACHE_BROADCAST : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(63, 6));
  constant LDEXMEM : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(63, 6));
  constant LDCACHE : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(63, 6));
  constant STEXMEM : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(63, 6));
  constant STCACHE : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(63, 6));
  constant INCEMRB_0 : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(63, 6));
  constant INCEMRB_1 : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(63, 6));
  constant INCEMWB_0 : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(63, 6));
  constant BARRIER : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(63, 6));
  constant SETEMRBINIT_0 : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(63, 6));
  constant SETEMRBINIT_1 : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(63, 6));
  constant SETEMWBINIT_0 : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(63, 6));
  constant SETEMRBAUTOINCSIZE_0 : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(63, 6));
  constant SETEMRBAUTOINCSIZE_1 : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(63, 6));
  constant SETEMWBAUTOINCSIZE_0 : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(63, 6));
  constant RESETRXIDX : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(63, 6));
  constant RESETTXIDX : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(63, 6));
  constant INCRXIDXBY1 : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(63, 6));
  constant INCTXIDXBY1 : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(63, 6));
  constant SETINFIFODEPTH : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(63, 6));
  constant SETOUTFIFODEPTH : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(63, 6));
  constant SETREGVALUE : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(63, 6));
  constant INCDMRB_ALL : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(63, 6));
  constant ABSDIFFACCUM_XXMM : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(63, 6));
  constant ABSDIFFACCUM_MXMM : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(63, 6));
  constant ABSDIFFACCUM_FXMM : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(63, 6));
  constant SETREGVALUE_ID : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(63, 6));
  constant SETMASKLT_XRMR : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(63, 6));
  constant DECONST_RXRX : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(63, 6));
  constant DECONST_MXRX : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(63, 6));
  constant DECONST_RXMX : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(63, 6));
  constant SLT_RRRR : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(63, 6));
  constant SLT_RRIR : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(63, 6));
  constant SGT_RRRR : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(63, 6));
  constant SGT_RRIR : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(63, 6));
  constant LDSORT_XXRX : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(63, 6));
  constant SORT : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(63, 6));
  constant UNLDSORT_RXXX : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(63, 6));
  constant DIV_RXRR : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(63, 6));
  constant SQRT_RXRR : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(63, 6));
end;